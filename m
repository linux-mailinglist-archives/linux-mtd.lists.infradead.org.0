Return-Path: <linux-mtd-bounces+lists+linux-mtd=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-mtd@lfdr.de
Delivered-To: lists+linux-mtd@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 4BAAB15248A
	for <lists+linux-mtd@lfdr.de>; Wed,  5 Feb 2020 02:43:55 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:To:Subject:Message-ID:Date:From:
	MIME-Version:Reply-To:Cc:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:
	References:List-Owner; bh=HDA4QasxHnBlxZCTLRxzNKrUghLbO0ML7viEFMKbB0Y=; b=qHn
	tb/mL6xnhHOd5OBwC+iGFJvwkYTAjjEXfxLwWZ1jz0V13jG6nhxyVwepkLXTUtB707QZKwC/36+dy
	gh5Bk7++TUj2OKIsEsZO81Fy/vEatzvU6KbJtC+LeXVPahsMnLz4Av08iGPjDGVBiF1clMr4eWc5N
	4VpdENNq6Y2GeYAX0/8BbZ0y80ySDoZataSv7CdEB3NocOO+HusV7EJNJBl3y39EEnkOYH/RC9L3W
	wClUvMXe+yPbzlOz8S2M36Y9ApLw8E99wkhs0Xilh1soN4puWhb3guucPNcU5lxkM74QdgK2lmCWb
	zQqK+cvlXig92BqHQ+LvgKSLMLScJpw==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1iz9jJ-0003n8-NM; Wed, 05 Feb 2020 01:43:49 +0000
Received: from mail-il1-x12e.google.com ([2607:f8b0:4864:20::12e])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iz9j9-0003mf-Ih
 for linux-mtd@lists.infradead.org; Wed, 05 Feb 2020 01:43:42 +0000
Received: by mail-il1-x12e.google.com with SMTP id g12so505710ild.2
 for <linux-mtd@lists.infradead.org>; Tue, 04 Feb 2020 17:43:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=mime-version:from:date:message-id:subject:to
 :content-transfer-encoding;
 bh=P57me5TPxaB86dzuJeex+hXL3JPVybbxrVvm0UPmVtc=;
 b=nxgK0NVxI36BYXVu9sFuum8GGuFYkJfbjNPn/5lw+rtMtYMdg8FFF0GJzPVJ5bi3aL
 Mn1C40ja+ahKy9gFlscOD1SWYzhb1ApKlosMBE8B/sT50nmWsAKkmfJDgA6Ow0TE4uGx
 P1EpMsdwpwSXpyt5Xt6OLQv7M8nXRdr4sW8/kNIPxvNGIScFLlSK9hLD4wQJlZAsg7AA
 48L6vHj9gJAQ2g4QrexfpagogB9I/kTeOdBjX4rnQkADA3KiTiD2FyPlRZJMMY1vZUWo
 EnTt9zsCT0BeVlV5HBkJ7cKOQc5LwaKCJBU76GaqkiFMEsalOd1Md6IFBIxctUoGBWRd
 4wKQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:from:date:message-id:subject:to
 :content-transfer-encoding;
 bh=P57me5TPxaB86dzuJeex+hXL3JPVybbxrVvm0UPmVtc=;
 b=qmLToR4a/AL2qAky6oxIlc8ySQ5rbjRvtVucy7RHG7nckHzdTlsvDWq6+w2fvj42Ci
 NWmxY/YqTvSLJysm50/OZ0Zk0muClFRw+2ExpEoGLFDlUs1mkR31HYVXtifXTEKFD5Ny
 Uu6xtqMUTj2aYBJH1c1pPfYv1dytVGEVzuSCxXeN0NLhny9RB0Si+UC3M04EM47jy/ai
 X0juh94nMdGYs7m8Her/WdBMU3PrvME/XAeKKEz4lM4VPEuWkVYB16u/n6eosAb44Usn
 q1zZ+Vg7v6zbQEyVDnkbd7iW7n0nu2/Ikvvs/fB1C9kiQqEH8MZocKQQP+dGosv1bF0j
 3p2A==
X-Gm-Message-State: APjAAAU9f2ZfGLHQD8yMd7ER9LExXJT/CNtSlUbFUIX6bAJMd7egjqV1
 EbHzEyZl2eUW675V5HgIpAMyKg8AM7dyrZ+ICLgXMRxTmNc=
X-Google-Smtp-Source: APXvYqyF7S89r+o7aC15aUyhf/hF82d4f8M7FBC9kv9uM66a9xS37UAN8a/CnMrah1nG9tfZQVGTlspu/1YUMHqsGKc=
X-Received: by 2002:a92:390d:: with SMTP id g13mr23319021ila.53.1580867016975; 
 Tue, 04 Feb 2020 17:43:36 -0800 (PST)
MIME-Version: 1.0
Received: by 2002:ad5:5d0d:0:0:0:0:0 with HTTP;
 Tue, 4 Feb 2020 17:43:36 -0800 (PST)
From: JH <jupiter.hce@gmail.com>
Date: Wed, 5 Feb 2020 12:43:36 +1100
Message-ID: <CAA=hcWTmUFRnxH7XY_040QG0oiUErJ84-mZQ3Zbfaaj7-TMFtQ@mail.gmail.com>
Subject: Corruped NAND booting for all devices
To: linux-mtd <linux-mtd@lists.infradead.org>
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200204_174339_647109_34125210 
X-CRM114-Status: GOOD (  15.36  )
X-Spam-Score: -0.2 (/)
X-Spam-Report: SpamAssassin version 3.4.3 on bombadil.infradead.org summary:
 Content analysis details:   (-0.2 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 0.0 FREEMAIL_FROM          Sender email is commonly abused enduser mail
 provider [jupiter.hce[at]gmail.com]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [2607:f8b0:4864:20:0:0:0:12e listed in]
 [list.dnswl.org]
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
X-BeenThere: linux-mtd@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux MTD discussion mailing list <linux-mtd.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-mtd>,
 <mailto:linux-mtd-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-mtd/>
List-Post: <mailto:linux-mtd@lists.infradead.org>
List-Help: <mailto:linux-mtd-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-mtd>,
 <mailto:linux-mtd-request@lists.infradead.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-mtd" <linux-mtd-bounces@lists.infradead.org>
Errors-To: linux-mtd-bounces+lists+linux-mtd=lfdr.de@lists.infradead.org

SGksCgpJdCBpcyBhIGJhZCBkYXkgd2UgaGF2ZSA1IGRldmljZXMgZmFpbGVkIE5BTkQgYm9vdGlu
ZyBhbGwgb2YgY2VydGFpbgp0b2RheS4gVGhlIDUgZGV2aWNlcyBydW5uaW5nIGtlcm5lbCA0LjE5
Ljc1IG9uIGlNWDZVTEwgY3VzdG9taXplZApib2FyZCwgdGhlIGRldmljZXMgaGFkIGJlZW4gcnVu
bmluZyBmb3Igd2Vla3MsIHRoZSBkZXZpY2UgREMgcG93ZXIgaXMKc3VwcGxpZWQgZnJvbSBBQyB2
aWEgQURDIGFuZCByZWd1bGF0b3IsIHdlIHR1cm5lZCBwb3dlciBvbiBhbmQgb2ZmCnNldmVyYWwg
dGltZXMgd2hlbiBpbnN0YWxsaW5nIHRob3NlIHRlc3QgZGV2aWNlcyB0byB0ZXN0IGJveGVzIGlu
IHRoZQpsYXN0IGNvdXBsZSBvZiBkYXlzIHdpdGhvdXQgcHJvYmxlbXMsIHRoZW4gdGhleSBhbGwg
ZmFpbGVkIHRvZ2V0aGVyCm15c3RlcmlvdXNseSB0b2RheS4gSXQgY291bGQgbm90IGNvbXBsZXRl
IHRoZSBib290aW5nIHRvIExpbnV4IHVzZXIKc3BhY2UsIHNvIEkgYW0gbm90IGFibGUgdG8gbG9n
IGludG8gdGhlIHVzZXIgc3BhY2UgdG8gY2hlY2sgYW5kIHRvCmRlYnVnIGl0LgoKSGVyZSBpcyBz
b21lIG1vcmUgYmFja2dyb3VuZCBpbmZvcm1hdGlvbiwgdGhvc2UgNSBkZXZpY2VzIGFyZSBmcm9t
IHRoZQpzYW1lIG5ldyBoYXJkd2FyZSByZXZlcnNpb24gd2hpY2ggY2hhbmdlZCBhIG5ldyBwb3dl
ciByZWd1bGF0b3IsIHRoZXkKaW5zdGFsbGVkIHRoZSBzYW1lIGZpcm13YXJlIGtlcm5lbCA0LjE5
IGJ1aWxkaW5nIGZyb20gWW9jdG8uCgpBbm90aGVyIGZhY3QsIHRoZXJlIGFyZSBzZXZlcmFsIG9s
ZCBoYXJkd2FyZSByZXZlcnNpb24gZGV2aWNlcyAodXNpbmcKZGlmZmVyZW50IHBvd2VyIHJlZ3Vs
YXRvcikgaW5zdGFsbGVkIHRoZSBzYW1lIHZlcnNpb24gb2Yga2VybmVsIGFuZApNVEQsIGJ1dCBk
aWZmZXJlbnQgdmVyc2lvbnMgb2YgaGlnaCBsZXZlbCBhcHBsaWNhdGlvbnMgaW4gdGhlIHNhbWUK
dGVzdCBib3gsIHdoaWNoIGFyZSBhbGwgcnVubmluZyBmaW5lLiBTbyBpdCBydWxlZCBvdXQgcG93
ZXIgc3VyZ2UgdG8KY2F1c2UgdGhlIHByb2JsZW0uCgpJIHRyeSB0byBmaWd1cmUgb3V0IHRoZSBz
b3VyY2Ugb2YgdGhlIHByb2JsZW0gd2hldGhlciBpdCBpcyBjYXVzZWQgYnkKZmlybXdhcmUgb3Ig
YnV5IGhhcmR3YXJlLCBhcyBpdCBpcyBpbiB2ZXJ5IGxvdyBsZXZlbCwgSSBkb3VidCB0aGUgaGln
aApsZXZlbCBhcHBsaWNhdGlvbnMgY291bGQgY29udHJpYnV0ZSB0aGUgcHJvYmxlbSwgYnV0IEkg
Y291bGQgYmUgd3JvbmcuClRoZXJlIHdlcmUgc29tZSBOQU5EIGJhZCBibG9ja3MsIEkgYW0gbm90
IHN1cmUgaWYgdGhhdCBjb3VsZCBjYXVzZSB0aGUKYm9vdGluZyBjb3JydXB0aW9uLiBUaGUgWW9j
dG8gaW1hZ2Ugd2FzIGJ1aWx0IGZyb20gdGhlIHNhbWUgWW9jdG8KYnVpbGQgc3lzdGVtLCBJIGFt
IG5vdCBjbGVhciBpZiB0aGUgWW9jdG8gaW1hZ2UgY291bGQgY2F1c2UgdGhlIE5BTkQKY29ycnVw
dGlvbiBvciBub3QuIEFsc28sIGNvdWxkIHVzaW5nIE5BTkQgZmFzdG1hcCBjYXVzZSB0aGUgcHJv
YmxlbT8KQXR0YWNoZWQgZm9sbG93aW5nIGJvb3RpbmcgbWVzc2FnZSwgYXBwcmVjaWF0ZSB5b3Vy
IGluc2lnaHQgY29tbWVudHMuCgpXZWxjb21lIHRvICBtaW5pY29tIDIuNy4xCk9QVElPTlM6CkNv
bXBpbGVkIG9uIEF1ZyAyMCAyMDE4LCAxMDoyMjo0Mi4KUG9ydCAvZGV2L2N1LnVzYnNlcmlhbC1G
VEFQUFZVSiwgMTE6NDc6NTUKUHJlc3MgTWV0YS1aIGZvciBoZWxwIG9uIHNwZWNpYWwga2V5cwo/
Pz8/Pz8KVS1Cb290IDIwMTguMDMtZzZjZTJiYzJhZTIgKEphbiAxNyAyMDIwIC0gMDA6NTc6NDEg
KzAwMDApCkNQVTogICBGcmVlc2NhbGUgaS5NWDZVTFogcmV2MS4xIDkwMCBNSHogKHJ1bm5pbmcg
YXQgMzk2IE1IeikKQ1BVOiAgIENvbW1lcmNpYWwgdGVtcGVyYXR1cmUgZ3JhZGUgKDBDIHRvIDk1
QykgYXQgNTZDClJlc2V0IGNhdXNlOiBQT1IKTW9kZWw6IEZyZWVzY2FsZSBpLk1YNiBVTFogMTR4
MTQgRVZLIEJvYXJkCkJvYXJkOiBNWDZVTFogMTR4MTQgRVZLCkRSQU06ICA1MTIgTWlCCk5BTkQ6
ICAyNTYgTWlCCk1NQzogICBGU0xfU0RIQzogMApMb2FkaW5nIEVudmlyb25tZW50IGZyb20gTkFO
RC4uLiAqKiogV2FybmluZyAtIGJhZCBDUkMsIHVzaW5nIGRlZmF1bHQKZW52aXJvbm1lbnQKRmFp
bGVkICgtNSkKTm8gcGFuZWwgZGV0ZWN0ZWQ6IGRlZmF1bHQgdG8gVEZUNDNBQgpEaXNwbGF5OiBU
RlQ0M0FCICg0ODB4MjcyKQpWaWRlbzogTENESUZAMHgyMWM4MDAwIGlzIGZ1c2VkLCBkaXNhYmxl
IGl0CkluOiAgICBzZXJpYWwKT3V0OiAgIHNlcmlhbApFcnI6ICAgc2VyaWFsCk5ldDogICBObyBl
dGhlcm5ldCBmb3VuZC4KTm9ybWFsIEJvb3QKSGl0IGFueSBrZXkgdG8gc3RvcCBhdXRvYm9vdDog
IDAKQm9vdGluZyBpbWFnZSAxCk5BTkQgcmVhZDogZGV2aWNlIDAgb2Zmc2V0IDB4ODAwMDAwLCBz
aXplIDB4MjAwMDAwMAogMzM1NTQ0MzIgYnl0ZXMgcmVhZDogT0sKTkFORCByZWFkOiBkZXZpY2Ug
MCBvZmZzZXQgMHg2MDAwMDAsIHNpemUgMHgyMDAwMDAKIDIwOTcxNTIgYnl0ZXMgcmVhZDogT0sK
S2VybmVsIGltYWdlIEAgMHg4MDgwMDAwMCBbIDB4MDAwMDAwIC0gMHg3ZjA5ZDAgXQojIyBGbGF0
dGVuZWQgRGV2aWNlIFRyZWUgYmxvYiBhdCA4MzAwMDAwMAogICBCb290aW5nIHVzaW5nIHRoZSBm
ZHQgYmxvYiBhdCAweDgzMDAwMDAwCiAgIFVzaW5nIERldmljZSBUcmVlIGluIHBsYWNlIGF0IDgz
MDAwMDAwLCBlbmQgODMwMDg5NzIKZnRfc3lzdGVtX3NldHVwIGZvciBteDYKClN0YXJ0aW5nIGtl
cm5lbCAuLi4KWyAgICAwLjAwMDAwMF0gQm9vdGluZyBMaW51eCBvbiBwaHlzaWNhbCBDUFUgMHgw
ClsgICAgMC4wMDAwMDBdIExpbnV4IHZlcnNpb24gNC4xOS43NSAob2UtdXNlckBvZS1ob3N0KSAo
Z2NjIHZlcnNpb24KOC4yLjAgKEdDQykpICMxIFNNUCBGcmkgTm92IDggMDY6NTE5ClsgICAgMC4w
MDAwMDBdIENQVTogQVJNdjcgUHJvY2Vzc29yIFs0MTBmYzA3NV0gcmV2aXNpb24gNSAoQVJNdjcp
LCBjcj0xMGM1Mzg3ZApbICAgIDAuMDAwMDAwXSBDUFU6IGRpdiBpbnN0cnVjdGlvbnMgYXZhaWxh
YmxlOiBwYXRjaGluZyBkaXZpc2lvbiBjb2RlClsgICAgMC4wMDAwMDBdIENQVTogUElQVCAvIFZJ
UFQgbm9uYWxpYXNpbmcgZGF0YSBjYWNoZSwgVklQVCBhbGlhc2luZwppbnN0cnVjdGlvbiBjYWNo
ZQpbICAgIDAuMDAwMDAwXSBPRjogZmR0OiBNYWNoaW5lIG1vZGVsOiBUcmF2ZXJzZSBQTVUgUmV2
QwpbICAgIDAuMDAwMDAwXSBlYXJseWNvbjogZWNfaW14NnEwIGF0IE1NSU8gMHgwMjAyMDAwMCAo
b3B0aW9ucyAnJykKWyAgICAwLjAwMDAwMF0gYm9vdGNvbnNvbGUgW2VjX2lteDZxMF0gZW5hYmxl
ZApbICAgIDAuMDAwMDAwXSBNZW1vcnkgcG9saWN5OiBEYXRhIGNhY2hlIHdyaXRlYWxsb2MKWyAg
ICAwLjAwMDAwMF0gY21hOiBSZXNlcnZlZCA2NCBNaUIgYXQgMHg4YzAwMDAwMApbICAgIDAuMDAw
MDAwXSByYW5kb206IGdldF9yYW5kb21fYnl0ZXMgY2FsbGVkIGZyb20Kc3RhcnRfa2VybmVsKzB4
OGMvMHg0OGMgd2l0aCBjcm5nX2luaXQ9MApbICAgIDAuMDAwMDAwXSBwZXJjcHU6IEVtYmVkZGVk
IDE4IHBhZ2VzL2NwdSBzNDE4OTYgcjgxOTIgZDIzNjQwIHU3MzcyOApbICAgIDAuMDAwMDAwXSBC
dWlsdCAxIHpvbmVsaXN0cywgbW9iaWxpdHkgZ3JvdXBpbmcgb24uICBUb3RhbCBwYWdlczogNjUw
MjQKWyAgICAwLjAwMDAwMF0gS2VybmVsIGNvbW1hbmQgbGluZTogY29uc29sZT10dHlteGMwLDEx
NTIwMCBlYXJseWNvbgptdGRwYXJ0cz1ncG1pLW5hbmQ6NG0oYm9vdCksMm0odWJvbzEKWyAgICAw
LjAwMDAwMF0gRGVudHJ5IGNhY2hlIGhhc2ggdGFibGUgZW50cmllczogMzI3NjggKG9yZGVyOiA1
LCAxMzEwNzIgYnl0ZXMpClsgICAgMC4wMDAwMDBdIElub2RlLWNhY2hlIGhhc2ggdGFibGUgZW50
cmllczogMTYzODQgKG9yZGVyOiA0LCA2NTUzNiBieXRlcykKWyAgICAwLjAwMDAwMF0gTWVtb3J5
OiAxNjkxMjRLLzI2MjE0NEsgYXZhaWxhYmxlICgxMTI2NEsga2VybmVsIGNvZGUsCjg4MUsgcndk
YXRhLCAzNjY0SyByb2RhdGEsIDEwMjRLICkKWyAgICAwLjAwMDAwMF0gVmlydHVhbCBrZXJuZWwg
bWVtb3J5IGxheW91dDoKWyAgICAwLjAwMDAwMF0gICAgIHZlY3RvciAgOiAweGZmZmYwMDAwIC0g
MHhmZmZmMTAwMCAgICggICA0IGtCKQpbICAgIDAuMDAwMDAwXSAgICAgZml4bWFwICA6IDB4ZmZj
MDAwMDAgLSAweGZmZjAwMDAwICAgKDMwNzIga0IpClsgICAgMC4wMDAwMDBdICAgICB2bWFsbG9j
IDogMHhkMDgwMDAwMCAtIDB4ZmY4MDAwMDAgICAoIDc1MiBNQikKWyAgICAwLjAwMDAwMF0gICAg
IGxvd21lbSAgOiAweGMwMDAwMDAwIC0gMHhkMDAwMDAwMCAgICggMjU2IE1CKQpbICAgIDAuMDAw
MDAwXSAgICAgcGttYXAgICA6IDB4YmZlMDAwMDAgLSAweGMwMDAwMDAwICAgKCAgIDIgTUIpClsg
ICAgMC4wMDAwMDBdICAgICBtb2R1bGVzIDogMHhiZjAwMDAwMCAtIDB4YmZlMDAwMDAgICAoICAx
NCBNQikKWyAgICAwLjAwMDAwMF0gICAgICAgLnRleHQgOiAweChwdHJ2YWwpIC0gMHgocHRydmFs
KSAgICgxMjI1NiBrQikKWyAgICAwLjAwMDAwMF0gICAgICAgLmluaXQgOiAweChwdHJ2YWwpIC0g
MHgocHRydmFsKSAgICgxMDI0IGtCKQpbICAgIDAuMDAwMDAwXSAgICAgICAuZGF0YSA6IDB4KHB0
cnZhbCkgLSAweChwdHJ2YWwpICAgKCA4ODIga0IpClsgICAgMC4wMDAwMDBdICAgICAgICAuYnNz
IDogMHgocHRydmFsKSAtIDB4KHB0cnZhbCkgICAoNzY0OSBrQikKWyAgICAwLjAwMDAwMF0gU0xV
QjogSFdhbGlnbj02NCwgT3JkZXI9MC0zLCBNaW5PYmplY3RzPTAsIENQVXM9MSwgTm9kZXM9MQpb
ICAgIDAuMDAwMDAwXSBSdW5uaW5nIFJDVSBzZWxmIHRlc3RzClsgICAgMC4wMDAwMDBdIHJjdTog
SGllcmFyY2hpY2FsIFJDVSBpbXBsZW1lbnRhdGlvbi4KWyAgICAwLjAwMDAwMF0gcmN1OiAgICAg
UkNVIGV2ZW50IHRyYWNpbmcgaXMgZW5hYmxlZC4KWyAgICAwLjAwMDAwMF0gcmN1OiAgICAgUkNV
IGxvY2tkZXAgY2hlY2tpbmcgaXMgZW5hYmxlZC4KWyAgICAwLjAwMDAwMF0gcmN1OiAgICAgUkNV
IHJlc3RyaWN0aW5nIENQVXMgZnJvbSBOUl9DUFVTPTQgdG8gbnJfY3B1X2lkcz0xLgpbICAgIDAu
MDAwMDAwXSByY3U6IEFkanVzdGluZyBnZW9tZXRyeSBmb3IgcmN1X2Zhbm91dF9sZWFmPTE2LCBu
cl9jcHVfaWRzPTEKWyAgICAwLjAwMDAwMF0gTlJfSVJRUzogMTYsIG5yX2lycXM6IDE2LCBwcmVh
bGxvY2F0ZWQgaXJxczogMTYKWyAgICAwLjAwMDAwMF0gU3dpdGNoaW5nIHRvIHRpbWVyLWJhc2Vk
IGRlbGF5IGxvb3AsIHJlc29sdXRpb24gNDFucwpbICAgIDAuMDAwMDIyXSBzY2hlZF9jbG9jazog
MzIgYml0cyBhdCAyNE1IeiwgcmVzb2x1dGlvbiA0MW5zLCB3cmFwcwpldmVyeSA4OTQ3ODQ4NDk3
MW5zClsgICAgMC4wMDc4NDRdIGNsb2Nrc291cmNlOiBteGNfdGltZXIxOiBtYXNrOiAweGZmZmZm
ZmZmIG1heF9jeWNsZXM6CjB4ZmZmZmZmZmYsIG1heF9pZGxlX25zOiA3OTYzNTg1MTlzClsgICAg
MC4wMjAyOTJdIENvbnNvbGU6IGNvbG91ciBkdW1teSBkZXZpY2UgODB4MzAKWyAgICAwLjAyMTk3
OF0gTG9jayBkZXBlbmRlbmN5IHZhbGlkYXRvcjogQ29weXJpZ2h0IChjKSAyMDA2IFJlZCBIYXQs
CkluYy4sIEluZ28gTW9sbmFyClsgICAgMC4wMzAwNDhdIC4uLiBNQVhfTE9DS0RFUF9TVUJDTEFT
U0VTOiAgOApbICAgIDAuMDMzNzk4XSAuLi4gTUFYX0xPQ0tfREVQVEg6ICAgICAgICAgIDQ4Clsg
ICAgMC4wMzc5NzFdIC4uLiBNQVhfTE9DS0RFUF9LRVlTOiAgICAgICAgODE5MQpbICAgIDAuMDQy
NDM2XSAuLi4gQ0xBU1NIQVNIX1NJWkU6ICAgICAgICAgIDQwOTYKWyAgICAwLjA0NjY3Ml0gLi4u
IE1BWF9MT0NLREVQX0VOVFJJRVM6ICAgICAzMjc2OApbICAgIDAuMDUxMTA4XSAuLi4gTUFYX0xP
Q0tERVBfQ0hBSU5TOiAgICAgIDY1NTM2ClsgICAgMC4wNTU2NDRdIC4uLiBDSEFJTkhBU0hfU0la
RTogICAgICAgICAgMzI3NjgKWyAgICAwLjA1OTk4M10gIG1lbW9yeSB1c2VkIGJ5IGxvY2sgZGVw
ZW5kZW5jeSBpbmZvOiA0NjU1IGtCClsgICAgMC4wNjUzNzhdICBwZXIgdGFzay1zdHJ1Y3QgbWVt
b3J5IGZvb3RwcmludDogMTUzNiBieXRlcwpbICAgIDAuMDcwOTg1XSBDYWxpYnJhdGluZyBkZWxh
eSBsb29wIChza2lwcGVkKSwgdmFsdWUgY2FsY3VsYXRlZAp1c2luZyB0aW1lciBmcmVxdWVuY3ku
LiA0OC4wMCBCb2dvTUlQKQpbICAgIDAuMDgxMjQyXSBwaWRfbWF4OiBkZWZhdWx0OiAzMjc2OCBt
aW5pbXVtOiAzMDEKWyAgICAwLjA4NjU5OF0gTW91bnQtY2FjaGUgaGFzaCB0YWJsZSBlbnRyaWVz
OiAxMDI0IChvcmRlcjogMCwgNDA5NiBieXRlcykKWyAgICAwLjA5MjUxM10gTW91bnRwb2ludC1j
YWNoZSBoYXNoIHRhYmxlIGVudHJpZXM6IDEwMjQgKG9yZGVyOiAwLCA0MDk2IGJ5dGVzKQpbICAg
IDAuMTAzOTAyXSBDUFU6IFRlc3Rpbmcgd3JpdGUgYnVmZmVyIGNvaGVyZW5jeTogb2sKWyAgICAw
LjEwODM1OV0gL2NwdXMvY3B1QDAgbWlzc2luZyBjbG9jay1mcmVxdWVuY3kgcHJvcGVydHkKWyAg
ICAwLjExMTQ5MF0gQ1BVMDogdGhyZWFkIC0xLCBjcHUgMCwgc29ja2V0IDAsIG1waWRyIDgwMDAw
MDAwClsgICAgMC4xMjMzMzVdIFNldHRpbmcgdXAgc3RhdGljIGlkZW50aXR5IG1hcCBmb3IgMHg4
MDEwMDAwMCAtIDB4ODAxMDAwNzgKWyAgICAwLjEyODc5N10gcmN1OiBIaWVyYXJjaGljYWwgU1JD
VSBpbXBsZW1lbnRhdGlvbi4KWyAgICAwLjEzNzg1MF0gc21wOiBCcmluZ2luZyB1cCBzZWNvbmRh
cnkgQ1BVcyAuLi4KWyAgICAwLjEzOTYwN10gc21wOiBCcm91Z2h0IHVwIDEgbm9kZSwgMSBDUFUK
WyAgICAwLjE0MzYwNF0gU01QOiBUb3RhbCBvZiAxIHByb2Nlc3NvcnMgYWN0aXZhdGVkICg0OC4w
MCBCb2dvTUlQUykuClsgICAgMC4xNDk5MzRdIENQVTogQWxsIENQVShzKSBzdGFydGVkIGluIFNW
QyBtb2RlLgpbICAgIDAuMTU5NzgxXSBkZXZ0bXBmczogaW5pdGlhbGl6ZWQKWyAgICAwLjIwMjMz
NV0gVkZQIHN1cHBvcnQgdjAuMzogaW1wbGVtZW50b3IgNDEgYXJjaGl0ZWN0dXJlIDIgcGFydCAz
MAp2YXJpYW50IDcgcmV2IDUKWyAgICAwLjIwOTIzNV0gY2xvY2tzb3VyY2U6IGppZmZpZXM6IG1h
c2s6IDB4ZmZmZmZmZmYgbWF4X2N5Y2xlczoKMHhmZmZmZmZmZiwgbWF4X2lkbGVfbnM6IDE5MTEy
NjA0NDYyN3MKWyAgICAwLjIxNzQ2NV0gZnV0ZXggaGFzaCB0YWJsZSBlbnRyaWVzOiAyNTYgKG9y
ZGVyOiAyLCAxNjM4NCBieXRlcykKWyAgICAwLjIzMDMxNV0gcGluY3RybCBjb3JlOiBpbml0aWFs
aXplZCBwaW5jdHJsIHN1YnN5c3RlbQpbICAgIDAuMjQyNTU2XSBORVQ6IFJlZ2lzdGVyZWQgcHJv
dG9jb2wgZmFtaWx5IDE2ClsgICAgMC4zMjQ2MjBdIERNQTogcHJlYWxsb2NhdGVkIDI1NiBLaUIg
cG9vbCBmb3IgYXRvbWljIGNvaGVyZW50IGFsbG9jYXRpb25zClsgICAgMC4zMzczMjZdIGNwdWlk
bGU6IHVzaW5nIGdvdmVybm9yIG1lbnUKWyAgICAwLjM4MDEwOF0gdmRkM3AwOiBzdXBwbGllZCBi
eSByZWd1bGF0b3ItZHVtbXkKWyAgICAwLjM4NjQzNl0gY3B1OiBzdXBwbGllZCBieSByZWd1bGF0
b3ItZHVtbXkKWyAgICAwLjM5MjUyN10gdmRkc29jOiBzdXBwbGllZCBieSByZWd1bGF0b3ItZHVt
bXkKWyAgICAwLjQ0NDc5NF0gTm8gQVRBR3M/ClsgICAgMC40NDUzOTddIGh3LWJyZWFrcG9pbnQ6
IGZvdW5kIDUgKCsxIHJlc2VydmVkKSBicmVha3BvaW50IGFuZCA0CndhdGNocG9pbnQgcmVnaXN0
ZXJzLgpbICAgIDAuNDUzMTg4XSBody1icmVha3BvaW50OiBtYXhpbXVtIHdhdGNocG9pbnQgc2l6
ZSBpcyA4IGJ5dGVzLgpbICAgIDAuNDcxMjg3XSBpbXg2dWwtcGluY3RybCAyMGUwMDAwLmlvbXV4
YzogaW5pdGlhbGl6ZWQgSU1YIHBpbmN0cmwgZHJpdmVyClsgICAgMC40Nzc3MzhdIGlteDZ1bC1w
aW5jdHJsIDIyOTAwMDAuaW9tdXhjLXNudnM6IG5vIGdyb3VwcyBkZWZpbmVkCmluIC9zb2MvYWlw
cy1idXNAMjIwMDAwMC9pb211eGMtc24wClsgICAgMC40ODUzMTZdIGlteDZ1bC1waW5jdHJsIDIy
OTAwMDAuaW9tdXhjLXNudnM6IGluaXRpYWxpemVkIElNWApwaW5jdHJsIGRyaXZlcgpbICAgIDAu
NjU5MTkzXSBteHMtZG1hIDE4MDQwMDAuZG1hLWFwYmg6IGluaXRpYWxpemVkClsgICAgMC42NzI4
OThdIHZnYWFyYjogbG9hZGVkClsgICAgMC42NzYzMDddIFNDU0kgc3Vic3lzdGVtIGluaXRpYWxp
emVkClsgICAgMC42ODA5NzJdIHVzYmNvcmU6IHJlZ2lzdGVyZWQgbmV3IGludGVyZmFjZSBkcml2
ZXIgdXNiZnMKWyAgICAwLjY4NDE5N10gdXNiY29yZTogcmVnaXN0ZXJlZCBuZXcgaW50ZXJmYWNl
IGRyaXZlciBodWIKWyAgICAwLjY5MDAxNV0gdXNiY29yZTogcmVnaXN0ZXJlZCBuZXcgZGV2aWNl
IGRyaXZlciB1c2IKWyAgICAwLjY5ODEyMl0gbWVkaWE6IExpbnV4IG1lZGlhIGludGVyZmFjZTog
djAuMTAKWyAgICAwLjcwMDQyMV0gdmlkZW9kZXY6IExpbnV4IHZpZGVvIGNhcHR1cmUgaW50ZXJm
YWNlOiB2Mi4wMApbICAgIDAuNzA2NDYxXSBwcHNfY29yZTogTGludXhQUFMgQVBJIHZlci4gMSBy
ZWdpc3RlcmVkClsgICAgMC43MTA1MjRdIHBwc19jb3JlOiBTb2Z0d2FyZSB2ZXIuIDUuMy42IC0g
Q29weXJpZ2h0IDIwMDUtMjAwNwpSb2RvbGZvIEdpb21ldHRpIDxnaW9tZXR0aUBsaW51eC5pdD4K
WyAgICAwLjcxOTU5MF0gUFRQIGNsb2NrIHN1cHBvcnQgcmVnaXN0ZXJlZApbICAgIDAuNzI1ODk2
XSBBZHZhbmNlZCBMaW51eCBTb3VuZCBBcmNoaXRlY3R1cmUgRHJpdmVyIEluaXRpYWxpemVkLgpb
ICAgIDAuNzM1ODk3XSBCbHVldG9vdGg6IENvcmUgdmVyIDIuMjIKWyAgICAwLjczNjk4M10gTkVU
OiBSZWdpc3RlcmVkIHByb3RvY29sIGZhbWlseSAzMQpbICAgIDAuNzQxMTI5XSBCbHVldG9vdGg6
IEhDSSBkZXZpY2UgYW5kIGNvbm5lY3Rpb24gbWFuYWdlciBpbml0aWFsaXplZApbICAgIDAuNzQ3
ODkzXSBCbHVldG9vdGg6IEhDSSBzb2NrZXQgbGF5ZXIgaW5pdGlhbGl6ZWQKWyAgICAwLjc1MjM5
MF0gQmx1ZXRvb3RoOiBMMkNBUCBzb2NrZXQgbGF5ZXIgaW5pdGlhbGl6ZWQKWyAgICAwLjc1ODAz
NV0gQmx1ZXRvb3RoOiBTQ08gc29ja2V0IGxheWVyIGluaXRpYWxpemVkClsgICAgMC43Njc1NTld
IGNsb2Nrc291cmNlOiBTd2l0Y2hlZCB0byBjbG9ja3NvdXJjZSBteGNfdGltZXIxClsgICAgMS40
NDExMzJdIFZGUzogRGlzayBxdW90YXMgZHF1b3RfNi42LjAKWyAgICAxLjQ0MjcxM10gVkZTOiBE
cXVvdC1jYWNoZSBoYXNoIHRhYmxlIGVudHJpZXM6IDEwMjQgKG9yZGVyIDAsIDQwOTYgYnl0ZXMp
ClsgICAgMS41MzAzODFdIE5FVDogUmVnaXN0ZXJlZCBwcm90b2NvbCBmYW1pbHkgMgpbICAgIDEu
NTM2OTY2XSB0Y3BfbGlzdGVuX3BvcnRhZGRyX2hhc2ggaGFzaCB0YWJsZSBlbnRyaWVzOiAxMjgK
KG9yZGVyOiAwLCA1MTIwIGJ5dGVzKQpbICAgIDEuNTQyNTQ1XSBUQ1AgZXN0YWJsaXNoZWQgaGFz
aCB0YWJsZSBlbnRyaWVzOiAyMDQ4IChvcmRlcjogMSwgODE5MiBieXRlcykKWyAgICAxLjU0OTQ5
Ml0gVENQIGJpbmQgaGFzaCB0YWJsZSBlbnRyaWVzOiAyMDQ4IChvcmRlcjogNCwgNzM3MjggYnl0
ZXMpClsgICAgMS41NTU5MDddIFRDUDogSGFzaCB0YWJsZXMgY29uZmlndXJlZCAoZXN0YWJsaXNo
ZWQgMjA0OCBiaW5kIDIwNDgpClsgICAgMS41NjMxMDBdIFVEUCBoYXNoIHRhYmxlIGVudHJpZXM6
IDI1NiAob3JkZXI6IDIsIDIwNDgwIGJ5dGVzKQpbICAgIDEuNTY4MDI2XSBVRFAtTGl0ZSBoYXNo
IHRhYmxlIGVudHJpZXM6IDI1NiAob3JkZXI6IDIsIDIwNDgwIGJ5dGVzKQpbICAgIDEuNTc1MDMy
XSBORVQ6IFJlZ2lzdGVyZWQgcHJvdG9jb2wgZmFtaWx5IDEKWyAgICAxLjU4NDAwOF0gUlBDOiBS
ZWdpc3RlcmVkIG5hbWVkIFVOSVggc29ja2V0IHRyYW5zcG9ydCBtb2R1bGUuClsgICAgMS41ODcy
MjRdIFJQQzogUmVnaXN0ZXJlZCB1ZHAgdHJhbnNwb3J0IG1vZHVsZS4KWyAgICAxLjU5MjE3NV0g
UlBDOiBSZWdpc3RlcmVkIHRjcCB0cmFuc3BvcnQgbW9kdWxlLgpbICAgIDEuNTk2NTk3XSBSUEM6
IFJlZ2lzdGVyZWQgdGNwIE5GU3Y0LjEgYmFja2NoYW5uZWwgdHJhbnNwb3J0IG1vZHVsZS4KWyAg
ICAxLjYyMjc3NF0gSW5pdGlhbGlzZSBzeXN0ZW0gdHJ1c3RlZCBrZXlyaW5ncwpbICAgIDEuNjI2
MTU5XSB3b3JraW5nc2V0OiB0aW1lc3RhbXBfYml0cz0zMCBtYXhfb3JkZXI9MTYgYnVja2V0X29y
ZGVyPTAKWyAgICAxLjY4MjU2M10gTkZTOiBSZWdpc3RlcmluZyB0aGUgaWRfcmVzb2x2ZXIga2V5
IHR5cGUKWyAgICAxLjY4NTA4Nl0gS2V5IHR5cGUgaWRfcmVzb2x2ZXIgcmVnaXN0ZXJlZApbICAg
IDEuNjg5NTI1XSBLZXkgdHlwZSBpZF9sZWdhY3kgcmVnaXN0ZXJlZApbICAgIDEuNjkzNDMxXSBq
ZmZzMjogdmVyc2lvbiAyLjIuIChOQU5EKSDCqSAyMDAxLTIwMDYgUmVkIEhhdCwgSW5jLgpbICAg
IDEuNzAzODc0XSBmdXNlIGluaXQgKEFQSSB2ZXJzaW9uIDcuMjcpClsgICAgMS43NTE4ODBdIEtl
eSB0eXBlIGFzeW1tZXRyaWMgcmVnaXN0ZXJlZApbICAgIDEuNzUzNDMzXSBBc3ltbWV0cmljIGtl
eSBwYXJzZXIgJ3g1MDknIHJlZ2lzdGVyZWQKWyAgICAxLjc2MDMyN10gaW8gc2NoZWR1bGVyIG5v
b3AgcmVnaXN0ZXJlZApbICAgIDEuNzYxOTk3XSBpbyBzY2hlZHVsZXIgZGVhZGxpbmUgcmVnaXN0
ZXJlZApbICAgIDEuNzY3MjQ1XSBpbyBzY2hlZHVsZXIgY2ZxIHJlZ2lzdGVyZWQgKGRlZmF1bHQp
ClsgICAgMS43NzE1MDhdIGlvIHNjaGVkdWxlciBtcS1kZWFkbGluZSByZWdpc3RlcmVkClsgICAg
MS43NzU0NzRdIGlvIHNjaGVkdWxlciBreWJlciByZWdpc3RlcmVkClsgICAgMS44MjQ4NDFdIGlt
eC1zZG1hIDIwZWMwMDAuc2RtYTogRGlyZWN0IGZpcm13YXJlIGxvYWQgZm9yCmlteC9zZG1hL3Nk
bWEtaW14NnEuYmluIGZhaWxlZCB3aXRoIGVycm8yClsgICAgMS44MzIyODBdIGlteC1zZG1hIDIw
ZWMwMDAuc2RtYTogZXh0ZXJuYWwgZmlybXdhcmUgbm90IGZvdW5kLAp1c2luZyBST00gZmlybXdh
cmUKWyAgICAxLjg1MTk1NV0gY29uc29sZSBbdHR5bXhjMF0gZW5hYmxlZApbICAgIDEuODU1ODU4
XSBib290Y29uc29sZSBbZWNfaW14NnEwXSBkaXNhYmxlZApbICAgIDEuODY5OTI2XSAyMWU4MDAw
LnNlcmlhbDogdHR5bXhjMSBhdCBNTUlPIDB4MjFlODAwMCAoaXJxID0gNDksCmJhc2VfYmF1ZCA9
IDUwMDAwMDApIGlzIGEgSU1YClsgICAgMS44ODQ1MTZdIDIxZjAwMDAuc2VyaWFsOiB0dHlteGMz
IGF0IE1NSU8gMHgyMWYwMDAwIChpcnEgPSA1MCwKYmFzZV9iYXVkID0gNTAwMDAwMCkgaXMgYSBJ
TVgKWyAgICAyLjAwMjYyMV0gYnJkOiBtb2R1bGUgbG9hZGVkClsgICAgMi4wODAzNzZdIGxvb3A6
IG1vZHVsZSBsb2FkZWQKWyAgICAyLjEwOTE3MF0gcmFuZG9tOiBmYXN0IGluaXQgZG9uZQpbICAg
IDIuMTQxMDYzXSBuYW5kOiBkZXZpY2UgZm91bmQsIE1hbnVmYWN0dXJlciBJRDogMHhlZiwgQ2hp
cCBJRDogMHhkYQpbICAgIDIuMTQ3Nzk0XSBuYW5kOiBXaW5ib25kIFcyOU4wMkdWClsgICAgMi4x
NTEzMzBdIG5hbmQ6IDI1NiBNaUIsIFNMQywgZXJhc2Ugc2l6ZTogMTI4IEtpQiwgcGFnZSBzaXpl
OgoyMDQ4LCBPT0Igc2l6ZTogNjQKWyAgICAyLjE2NTQ3NV0gQmFkIGJsb2NrIHRhYmxlIGZvdW5k
IGF0IHBhZ2UgMTMxMDA4LCB2ZXJzaW9uIDB4MDEKWyAgICAyLjE3MzAyMF0gQmFkIGJsb2NrIHRh
YmxlIGZvdW5kIGF0IHBhZ2UgMTMwOTQ0LCB2ZXJzaW9uIDB4MDEKWyAgICAyLjE4MDg5Ml0gNiBj
bWRsaW5lcGFydCBwYXJ0aXRpb25zIGZvdW5kIG9uIE1URCBkZXZpY2UgZ3BtaS1uYW5kClsgICAg
Mi4xODcyMjNdIENyZWF0aW5nIDYgTVREIHBhcnRpdGlvbnMgb24gImdwbWktbmFuZCI6ClsgICAg
Mi4xOTI2NjFdIDB4MDAwMDAwMDAwMDAwLTB4MDAwMDAwNDAwMDAwIDogImJvb3QiClsgICAgMi4y
MTQ3MTRdIDB4MDAwMDAwNDAwMDAwLTB4MDAwMDAwNjAwMDAwIDogInVib290ZW52IgpbICAgIDIu
MjMxMTg3XSAweDAwMDAwMDYwMDAwMC0weDAwMDAwMDgwMDAwMCA6ICJkdGIiClsgICAgMi4yNDY4
NDJdIDB4MDAwMDAwODAwMDAwLTB4MDAwMDAyODAwMDAwIDogImtlcm5lbDEiClsgICAgMi4zMTE2
NDhdIDB4MDAwMDAyODAwMDAwLTB4MDAwMDA0ODAwMDAwIDogImtlcm5lbDIiClsgICAgMi4zNzYy
OTldIDB4MDAwMDA0ODAwMDAwLTB4MDAwMDEwMDAwMDAwIDogInViaSIKWyAgICAyLjY4NDI1MF0g
Z3BtaS1uYW5kIDE4MDYwMDAuZ3BtaS1uYW5kOiBkcml2ZXIgcmVnaXN0ZXJlZC4KWyAgICAyLjcw
MDE2Nl0gbGlicGh5OiBGaXhlZCBNRElPIEJ1czogcHJvYmVkClsgICAgMi43MDg1OTddIENBTiBk
ZXZpY2UgZHJpdmVyIGludGVyZmFjZQpbICAgIDIuNzIwMTUzXSB1c2Jjb3JlOiByZWdpc3RlcmVk
IG5ldyBpbnRlcmZhY2UgZHJpdmVyIGFzaXgKWyAgICAyLjcyNTk3OF0gdXNiY29yZTogcmVnaXN0
ZXJlZCBuZXcgaW50ZXJmYWNlIGRyaXZlciBheDg4MTc5XzE3OGEKWyAgICAyLjczMjcyMF0gdXNi
Y29yZTogcmVnaXN0ZXJlZCBuZXcgaW50ZXJmYWNlIGRyaXZlciBjZGNfZXRoZXIKWyAgICAyLjcz
OTE1M10gdXNiY29yZTogcmVnaXN0ZXJlZCBuZXcgaW50ZXJmYWNlIGRyaXZlciBuZXQxMDgwClsg
ICAgMi43NDUyMDddIHVzYmNvcmU6IHJlZ2lzdGVyZWQgbmV3IGludGVyZmFjZSBkcml2ZXIgY2Rj
X3N1YnNldApbICAgIDIuNzUxNzIxXSB1c2Jjb3JlOiByZWdpc3RlcmVkIG5ldyBpbnRlcmZhY2Ug
ZHJpdmVyIHphdXJ1cwpbICAgIDIuNzU4MDgxXSB1c2Jjb3JlOiByZWdpc3RlcmVkIG5ldyBpbnRl
cmZhY2UgZHJpdmVyIGNkY19uY20KWyAgICAyLjc2NDE0M10gdXNiY29yZTogcmVnaXN0ZXJlZCBu
ZXcgaW50ZXJmYWNlIGRyaXZlciBxbWlfd3dhbgpbICAgIDIuNzcwMjA1XSBlaGNpX2hjZDogVVNC
IDIuMCAnRW5oYW5jZWQnIEhvc3QgQ29udHJvbGxlciAoRUhDSSkgRHJpdmVyClsgICAgMi43NzY4
NjZdIGVoY2ktcGNpOiBFSENJIFBDSSBwbGF0Zm9ybSBkcml2ZXIKWyAgICAyLjc4MTg4N10gZWhj
aS1teGM6IEZyZWVzY2FsZSBPbi1DaGlwIEVIQ0kgSG9zdCBkcml2ZXIKWyAgICAyLjc4OTU4N10g
dXNiY29yZTogcmVnaXN0ZXJlZCBuZXcgaW50ZXJmYWNlIGRyaXZlciBjZGNfd2RtClsgICAgMi43
OTU4NjhdIHVzYmNvcmU6IHJlZ2lzdGVyZWQgbmV3IGludGVyZmFjZSBkcml2ZXIgdXNiLXN0b3Jh
Z2UKWyAgICAzLjQ0MjY3MF0gbXhzX3BoeSAyMGM5MDAwLnVzYnBoeTogRGF0YSBwaW4gY2FuJ3Qg
bWFrZSBnb29kIGNvbnRhY3QuClsgICAgMy40NTU2NjRdIGlteF91c2IgMjE4NDIwMC51c2I6IDIx
ODQyMDAudXNiIHN1cHBseSB2YnVzIG5vdCBmb3VuZCwKdXNpbmcgZHVtbXkgcmVndWxhdG9yClsg
ICAgMy40NjYzOTNdIGlteF91c2IgMjE4NDIwMC51c2I6IExpbmtlZCBhcyBhIGNvbnN1bWVyIHRv
IHJlZ3VsYXRvci4wClsgICAgMy40Nzk5ODBdIGNpX2hkcmMgY2lfaGRyYy4xOiBFSENJIEhvc3Qg
Q29udHJvbGxlcgpbICAgIDMuNDg1NTA3XSBjaV9oZHJjIGNpX2hkcmMuMTogbmV3IFVTQiBidXMg
cmVnaXN0ZXJlZCwgYXNzaWduZWQgYnVzIG51bWJlciAxClsgICAgMy41MTc3NzldIGNpX2hkcmMg
Y2lfaGRyYy4xOiBVU0IgMi4wIHN0YXJ0ZWQsIEVIQ0kgMS4wMApbICAgIDMuNTMzNDg2XSBodWIg
MS0wOjEuMDogVVNCIGh1YiBmb3VuZApbICAgIDMuNTM4NzczXSBodWIgMS0wOjEuMDogMSBwb3J0
IGRldGVjdGVkClsgICAgMy41NjA4OTBdIGlucHV0OiAyMGNjMDAwLnNudnM6c252cy1wb3dlcmtl
eSBhcwovZGV2aWNlcy9zb2MwL3NvYy8yMDAwMDAwLmFpcHMtYnVzLzIwY2MwMDAuc252cy8yMGMw
ClsgICAgMy41OTMxNjZdIHNudnNfcnRjIDIwY2MwMDAuc252czpzbnZzLXJ0Yy1scDogcnRjIGNv
cmU6IHJlZ2lzdGVyZWQKMjBjYzAwMC5zbnZzOnNudnMtcnRjLWxwIGFzIHJ0YzAKWyAgICAzLjYw
MzkyMl0gaTJjIC9kZXYgZW50cmllcyBkcml2ZXIKWyAgICAzLjYyNjUxNV0gaW14Mi13ZHQgMjBi
YzAwMC53ZG9nOiB0aW1lb3V0IDYwIHNlYyAobm93YXlvdXQ9MCkKWyAgICAzLjYzNDg5NV0gQmx1
ZXRvb3RoOiBIQ0kgVUFSVCBkcml2ZXIgdmVyIDIuMwpbICAgIDMuNjM5NzI1XSBCbHVldG9vdGg6
IEhDSSBVQVJUIHByb3RvY29sIEg0IHJlZ2lzdGVyZWQKWyAgICAzLjY0NjI0Nl0gQmx1ZXRvb3Ro
OiBIQ0kgVUFSVCBwcm90b2NvbCBMTCByZWdpc3RlcmVkClsgICAgMy42NjEwMzVdIHNkaGNpOiBT
ZWN1cmUgRGlnaXRhbCBIb3N0IENvbnRyb2xsZXIgSW50ZXJmYWNlIGRyaXZlcgpbICAgIDMuNjY3
NTg1XSBzZGhjaTogQ29weXJpZ2h0KGMpIFBpZXJyZSBPc3NtYW4KWyAgICAzLjY3MjA2MV0gc2Ro
Y2ktcGx0Zm06IFNESENJIHBsYXRmb3JtIGFuZCBPRiBkcml2ZXIgaGVscGVyClsgICAgMy42ODI4
MjFdIHNkaGNpLWVzZGhjLWlteCAyMTkwMDAwLnVzZGhjOiBMaW5rZWQgYXMgYSBjb25zdW1lciB0
bwpyZWd1bGF0b3IuNApbICAgIDMuNzMxNDEwXSBtbWMwOiBTREhDSSBjb250cm9sbGVyIG9uIDIx
OTAwMDAudXNkaGMgWzIxOTAwMDAudXNkaGNdCnVzaW5nIEFETUEKWyAgICAzLjc1NTIwN10gdXNi
Y29yZTogcmVnaXN0ZXJlZCBuZXcgaW50ZXJmYWNlIGRyaXZlciB1c2JoaWQKWyAgICAzLjc2MTE4
MF0gdXNiaGlkOiBVU0IgSElEIGNvcmUgZHJpdmVyClsgICAgMy44NDE4MDNdIG1tYzA6IG5ldyBo
aWdoIHNwZWVkIFNESU8gY2FyZCBhdCBhZGRyZXNzIDAwMDEKWyAgICAzLjg1MzI2Ml0gTkVUOiBS
ZWdpc3RlcmVkIHByb3RvY29sIGZhbWlseSAxMApbICAgIDMuODcxMTExXSBTZWdtZW50IFJvdXRp
bmcgd2l0aCBJUHY2ClsgICAgMy44NzU1MThdIHNpdDogSVB2NiwgSVB2NCBhbmQgTVBMUyBvdmVy
IElQdjQgdHVubmVsaW5nIGRyaXZlcgpbICAgIDMuODg3MjY1XSBORVQ6IFJlZ2lzdGVyZWQgcHJv
dG9jb2wgZmFtaWx5IDE3ClsgICAgMy44OTI1NTRdIGNhbjogY29udHJvbGxlciBhcmVhIG5ldHdv
cmsgY29yZSAocmV2IDIwMTcwNDI1IGFiaSA5KQpbICAgIDMuODk5OTkzXSBORVQ6IFJlZ2lzdGVy
ZWQgcHJvdG9jb2wgZmFtaWx5IDI5ClsgICAgMy45MDQ2MDhdIGNhbjogcmF3IHByb3RvY29sIChy
ZXYgMjAxNzA0MjUpClsgICAgMy45MDk0ODZdIGNhbjogYnJvYWRjYXN0IG1hbmFnZXIgcHJvdG9j
b2wgKHJldiAyMDE3MDQyNSB0KQpbICAgIDMuOTE1MzQ3XSBjYW46IG5ldGxpbmsgZ2F0ZXdheSAo
cmV2IDIwMTcwNDI1KSBtYXhfaG9wcz0xClsgICAgMy45MjM3MzVdIEtleSB0eXBlIGRuc19yZXNv
bHZlciByZWdpc3RlcmVkClsgICAgMy45MzM1OTRdIGNwdSBjcHUwOiBMaW5rZWQgYXMgYSBjb25z
dW1lciB0byByZWd1bGF0b3IuMgpbICAgIDMuOTQwMzA2XSBjcHUgY3B1MDogTGlua2VkIGFzIGEg
Y29uc3VtZXIgdG8gcmVndWxhdG9yLjMKWyAgICAzLjk1MTQ4MF0gY3B1IGNwdTA6IGZhaWxlZCB0
byBkaXNhYmxlIDY5Nk1IeiBPUFAKWyAgICAzLjk2MjIxNV0gUmVnaXN0ZXJpbmcgU1dQL1NXUEIg
ZW11bGF0aW9uIGhhbmRsZXIKWyAgICAzLjk3NDA4OV0gTG9hZGluZyBjb21waWxlZC1pbiBYLjUw
OSBjZXJ0aWZpY2F0ZXMKWyAgICA0LjA5MTIxOV0gaW14X3RoZXJtYWwgdGVtcG1vbjogQ29tbWVy
Y2lhbCBDUFUgdGVtcGVyYXR1cmUgZ3JhZGUgLQptYXg6OTVDIGNyaXRpY2FsOjkwQyBwYXNzaXZl
Ojg1QwpbICAgIDQuMTA1MDY3XSB1YmkwOiBkZWZhdWx0IGZhc3RtYXAgcG9vbCBzaXplOiA3MApb
ICAgIDQuMTEwMDA5XSB1YmkwOiBkZWZhdWx0IGZhc3RtYXAgV0wgcG9vbCBzaXplOiAzNQpbICAg
IDQuMTE0ODYzXSB1YmkwOiBhdHRhY2hpbmcgbXRkNQpbICAgIDUuNjk5MzkyXSB1YmkwOiBzY2Fu
bmluZyBpcyBmaW5pc2hlZApbICAgIDUuNzI5MzkyXSB1YmkwOiBhdHRhY2hlZCBtdGQ1IChuYW1l
ICJ1YmkiLCBzaXplIDE4NCBNaUIpClsgICAgNS43MzQ5NjVdIHViaTA6IFBFQiBzaXplOiAxMzEw
NzIgYnl0ZXMgKDEyOCBLaUIpLCBMRUIgc2l6ZTogMTI2OTc2IGJ5dGVzClsgICAgNS43NDIwNzhd
IHViaTA6IG1pbi4vbWF4LiBJL08gdW5pdCBzaXplczogMjA0OC8yMDQ4LCBzdWItcGFnZSBzaXpl
IDIwNDgKWyAgICA1Ljc0OTA5MV0gdWJpMDogVklEIGhlYWRlciBvZmZzZXQ6IDIwNDggKGFsaWdu
ZWQgMjA0OCksIGRhdGEgb2Zmc2V0OiA0MDk2ClsgICAgNS43NTYxMTFdIHViaTA6IGdvb2QgUEVC
czogMTQ2OCwgYmFkIFBFQnM6IDQsIGNvcnJ1cHRlZCBQRUJzOiAwClsgICAgNS43NjIzNTNdIHVi
aTA6IHVzZXIgdm9sdW1lOiAxLCBpbnRlcm5hbCB2b2x1bWVzOiAxLCBtYXguIHZvbHVtZXMKY291
bnQ6IDEyOApbICAgIDUuNzY5NzI1XSB1YmkwOiBtYXgvbWVhbiBlcmFzZSBjb3VudGVyOiAxLzAs
IFdMIHRocmVzaG9sZDogNDA5NiwKaW1hZ2Ugc2VxdWVuY2UgbnVtYmVyOiAyMDEyODMyMTY5Clsg
ICAgNS43NzkwMDBdIHViaTA6IGF2YWlsYWJsZSBQRUJzOiAxMDQsIHRvdGFsIHJlc2VydmVkIFBF
QnM6IDEzNjQsClBFQnMgcmVzZXJ2ZWQgZm9yIGJhZCBQRUIgaGFuZGxpbmc2ClsgICAgNS43ODk1
OTddIHViaTA6IGJhY2tncm91bmQgdGhyZWFkICJ1YmlfYmd0MGQiIHN0YXJ0ZWQsIFBJRCA2Mwpb
ICAgIDUuNzk3NjA4XSBzbnZzX3J0YyAyMGNjMDAwLnNudnM6c252cy1ydGMtbHA6IHNldHRpbmcg
c3lzdGVtIGNsb2NrCnRvIDE5NzAtMDEtMDEgMDA6MDA6MDIgVVRDICgyKQpbICAgIDUuODA3MTE1
XSBjZmc4MDIxMTogTG9hZGluZyBjb21waWxlZC1pbiBYLjUwOSBjZXJ0aWZpY2F0ZXMgZm9yCnJl
Z3VsYXRvcnkgZGF0YWJhc2UKWyAgICA1LjgyNDQ3Ml0gY2ZnODAyMTE6IExvYWRlZCBYLjUwOSBj
ZXJ0ICdzZm9yc2hlZTogMDBiMjhkZGY0N2FlZjljZWE3JwpbICAgIDUuODMzNzQ4XSBBTFNBIGRl
dmljZSBsaXN0OgpbICAgIDUuODM2NzkwXSAgIE5vIHNvdW5kY2FyZHMgZm91bmQuClsgICAgNS44
NDE3MDhdIHBsYXRmb3JtIHJlZ3VsYXRvcnkuMDogRGlyZWN0IGZpcm13YXJlIGxvYWQgZm9yCnJl
Z3VsYXRvcnkuZGIgZmFpbGVkIHdpdGggZXJyb3IgLTIKWyAgICA1Ljg1MDY5MV0gY2ZnODAyMTE6
IGZhaWxlZCB0byBsb2FkIHJlZ3VsYXRvcnkuZGIKWyAgICA1LjkwNjYzNl0gcmFuZG9tOiBjcm5n
IGluaXQgZG9uZQpbICAgIDUuOTE1NTU4XSBVQklGUyAodWJpMDowKTogcmVjb3ZlcnkgbmVlZGVk
ClsgICAgNi43NzcwMzNdIFVCSUZTICh1YmkwOjApOiByZWNvdmVyeSBkZWZlcnJlZApbICAgIDYu
NzgyNjQwXSBVQklGUyAodWJpMDowKTogVUJJRlM6IG1vdW50ZWQgVUJJIGRldmljZSAwLCB2b2x1
bWUgMCwKbmFtZSAicm9vdGZzX2RhdGEiLCBSL08gbW9kZQpbICAgIDYuNzkxNjM0XSBVQklGUyAo
dWJpMDowKTogTEVCIHNpemU6IDEyNjk3NiBieXRlcyAoMTI0IEtpQiksCm1pbi4vbWF4LiBJL08g
dW5pdCBzaXplczogMjA0OCBieXRlcy8ycwpbICAgIDYuODAxNzA5XSBVQklGUyAodWJpMDowKTog
RlMgc2l6ZTogMTY2MzM4NTYwIGJ5dGVzICgxNTggTWlCLCAxMzEwCkxFQnMpLCBqb3VybmFsIHNp
emUgODM4MDQxNiBieXRlKQpbICAgIDYuODEyNTQzXSBVQklGUyAodWJpMDowKTogcmVzZXJ2ZWQg
Zm9yIHJvb3Q6IDQ5NTI2ODMgYnl0ZXMgKDQ4MzYgS2lCKQpbICAgIDYuODE5MjkzXSBVQklGUyAo
dWJpMDowKTogbWVkaWEgZm9ybWF0OiB3NC9yMCAobGF0ZXN0IGlzIHc1L3IwKSwKVVVJRCA4OERE
NzQwQy1DODFBLTQ1NzktQTZDQy03MjFBbApbICAgIDYuODM2NDE1XSBWRlM6IE1vdW50ZWQgcm9v
dCAodWJpZnMgZmlsZXN5c3RlbSkgcmVhZG9ubHkgb24gZGV2aWNlIDA6MTMuClsgICAgNi44NDc5
NDZdIGRldnRtcGZzOiBtb3VudGVkClsgICAgNi44NTQyMzFdIEZyZWVpbmcgdW51c2VkIGtlcm5l
bCBtZW1vcnk6IDEwMjRLClsgICAgNi44NjAwMjNdIFJ1biAvc2Jpbi9pbml0IGFzIGluaXQgcHJv
Y2VzcwpbICAgIDcuNDk5NTYyXSBzeXN0ZW1kWzFdOiBTeXN0ZW0gdGltZSBiZWZvcmUgYnVpbGQg
dGltZSwgYWR2YW5jaW5nIGNsb2NrLgpbICAgIDcuNjc5MzY0XSBzeXN0ZW1kWzFdOiBzeXN0ZW1k
IDIzOSBydW5uaW5nIGluIHN5c3RlbSBtb2RlLiAoLVBBTQotQVVESVQgLVNFTElOVVggK0lNQSAt
QVBQQVJNT1IgK1NNKQpbICAgIDcuNzA1ODY1XSBzeXN0ZW1kWzFdOiBEZXRlY3RlZCBhcmNoaXRl
Y3R1cmUgYXJtLgoKV2VsY29tZSB0byBPcGVuRW1iZWRkZWQgbm9kaXN0cm8uMCEKClsgICAgNy43
NzU4MTRdIHN5c3RlbWRbMV06IFNldCBob3N0bmFtZSB0byA8c29sYXI+LgpbICAgIDguNzMzMzk2
XSBzeXN0ZW1kWzFdOiBGaWxlCi9saWIvc3lzdGVtZC9zeXN0ZW0vc3lzdGVtZC1qb3VybmFsZC5z
ZXJ2aWNlOjM2IGNvbmZpZ3VyZXMgYW4gSVAKZmlyZXdhLgpbICAgIDguNzUyMjQzXSBzeXN0ZW1k
WzFdOiBQcm9jZWVkaW5nIFdJVEhPVVQgZmlyZXdhbGxpbmcgaW4gZWZmZWN0IQooVGhpcyB3YXJu
aW5nIGlzIG9ubHkgc2hvd24gZm9yIHRoKQpbICAgIDkuNDk4MDQ2XSBzeXN0ZW1kWzFdOiBMaXN0
ZW5pbmcgb24gSm91cm5hbCBTb2NrZXQgKC9kZXYvbG9nKS4KWyAgT0sgIF0gTGlzdGVuaW5nIG9u
IEpvdXJuYWwgU29ja2V0ICgvZGV2L2xvZykuClsgICAgOS41NTM5MzFdIHN5c3RlbWRbMV06IExp
c3RlbmluZyBvbiB1ZGV2IEtlcm5lbCBTb2NrZXQuClsgIE9LICBdIExpc3RlbmluZyBvbiB1ZGV2
IEtlcm5lbCBTb2NrZXQuClsgICAgOS41NzUwOTNdIHN5c3RlbWRbMV06IExpc3RlbmluZyBvbiBK
b3VybmFsIFNvY2tldC4KWyAgT0sgIF0gTGlzdGVuaW5nIG9uIEpvdXJuYWwgU29ja2V0LgpbICAg
IDkuNjUzNDg1XSBzeXN0ZW1kWzFdOiBNb3VudGluZyBLZXJuZWwgRGVidWcgRmlsZSBTeXN0ZW0u
Li4KICAgICAgICAgTW91bnRpbmcgS2VybmVsIERlYnVnIEZpbGUgU3lzdGVtLi4uClsgICAgOS43
MDY0MzFdIHN5c3RlbWRbNzddOiBzeXMta2VybmVsLWRlYnVnLm1vdW50OiBGYWlsZWQgdG8gZXhl
Y3V0ZQpjb21tYW5kOiBObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5ClsgICAgOS43MjE0MjBdIHN5
c3RlbWRbMV06IFJlYWNoZWQgdGFyZ2V0IFN3YXAuClsgIE9LICBdIFJlYWNoZWQgdGFyZ2V0IFN3
YXAuCiAgICAgICAgIE1vdW50aW5nIFRlbXBvcmFyeSBEaXJlY3RvcnkgKC90bXApLi4uClsgIE9L
ICBdIExpc3RlbmluZyBvbiBOZXR3b3JrIFNlcnZpY2UgTlsgICAgOS44MTkyNzldIHN5c3RlbWRb
NzhdOgp0bXAubW91bnQ6IEZhaWxlZCB0byBleGVjdXRlIGNvbW1hbmR5CmV0bGluayBTb2NrZXQu
CiAgICAgICAgIFN0YXJ0aW5nIEpvdXJuYWwgU2VydmljZS4uLgogICAgICAgICBTdGFydGluZyBB
cHBseSBLZXJuZWwgVmFyaWFibGVzLi4uCiAgICAgICAgIE1vdW50aW5nIEZVU0UgQ29udHJvbCBG
aWxlIFN5c3RlbS4uLgpbICAgMTAuMDMxMDA5XSBzeXN0ZW1kWzgyXTogc3lzLWZzLWZ1c2UtY29u
bmVjdGlvbnMubW91bnQ6IEZhaWxlZCB0bwpleGVjdXRlIGNvbW1hbmQ6IE5vIHN1Y2ggZmlsZSBv
ciBkeQpbICBPSyAgXSBSZWFjaGVkIHRhcmdldCBSZW1vdGUgRmlsZSBTeXN0ZW1zLgpbICBPSyAg
XSBDcmVhdGVkIHNsaWNlIFVzZXIgYW5kIFNlc3Npb24gU2xpY2UuClsgIE9LICBdIFN0YXJ0ZWQg
Rm9yd2FyZCBQYXNzd29yZCBSZXF1ZXN0cyB0byBXYWxsIERpcmVjdG9yeSBXYXRjaC4KWyAgT0sg
IF0gUmVhY2hlZCB0YXJnZXQgU2xpY2VzLgpbICBPSyAgXSBDcmVhdGVkIHNsaWNlIHN5c3RlbS1n
ZXR0eS5zbGljZS4KWyAgT0sgIF0gQ3JlYXRlZCBzbGljZSBzeXN0ZW0tc2VyaWFsXHgyZGdldHR5
LnNsaWNlLgogICAgICAgICBTdGFydGluZyBGaWxlIFN5c3RlbSBDaGVjayBvbiBSb290IERldmlj
ZS4uLgpbICBPSyAgXSBTdGFydGVkIERpc3BhdGNoIFBhc3N3b3JkIFJlcXVlc3RzIHRvIENvbnNv
bGUgRGlyZWN0b3J5IFdhdGNoLgpbICBPSyAgXSBSZWFjaGVkIHRhcmdldCBQYXRocy4KWyAgT0sg
IF0gTGlzdGVuaW5nIG9uIGluaXRjdGwgQ29tcGF0aWJpbGl0eSBOYW1lZCBQaXBlLgpbICBPSyAg
XSBMaXN0ZW5pbmcgb24gdWRldiBDb250cm9sIFNvY2tldC4KICAgICAgICAgU3RhcnRpbmcgdWRl
diBDb2xkcGx1ZyBhbGwgRGV2aWNlcy4uLgpbICBPSyAgXSBSZWFjaGVkIHRhcmdldCBIb3N0IGFu
ZCBOZXR3b3JrIE5hbWUgTG9va3Vwcy4KWyAgIDEwLjM3OTE0MV0gc3lzdGVtZFs4NF06IHN5c3Rl
bWQtdWRldi10cmlnZ2VyLnNlcnZpY2U6IEZhaWxlZCB0bwpleGVjdXRlIGNvbW1hbmQ6IE5vIHN1
Y2ggZmlsZSBvciBkaXkKW0ZBSUxFRF0gRmFpbGVkIHRvIG1vdW50IEtlcm5lbCBEZWJ1ZyBGaWxl
IFN5c3RlbS4KU2VlICdzeXN0ZW1jdGwgc3RhdHVzIHN5cy1rZXJuZWwtZGVidWcubW91bnQnIGZv
ciBkZXRhaWxzLgpbRkFJTEVEXSBGYWlsZWQgdG8gbW91bnQgVGVtcG9yYXJ5IERpcmVjdG9yeSAo
L3RtcCkuClNlZSAnc3lzdGVtY3RsIHN0YXR1cyB0bXAubW91bnQnIGZvciBkZXRhaWxzLgpbREVQ
RU5EXSBEZXBlbmRlbmN5IGZhaWxlZCBmb3IgTmV0d29yayBTZXJ2aWNlLgpbREVQRU5EXSBEZXBl
bmRlbmN5IGZhaWxlZCBmb3IgTmV0d29yayBUaW1lIFN5bmNocm9uaXphdGlvbi4KWyAgT0sgIF0g
U3RhcnRlZCBKb3VybmFsIFNlcnZpY2UuClsgIE9LICBdIFN0YXJ0ZWQgQXBwbHkgS2VybmVsIFZh
cmlhYmxlcy4KW0ZBSUxFRF0gRmFpbGVkIHRvIG1vdW50IEZVU0UgQ29udHJvbCBGaWxlIFN5c3Rl
bS4KU2VlICdzeXN0ZW1jdGwgc3RhdHVzIHN5cy1mcy1mdXNlLWNvbm5lY3Rpb25zLm1vdW50JyBm
b3IgZGV0YWlscy4KWyAgT0sgIF0gU3RhcnRlZCBGaWxlIFN5c3RlbSBDaGVjayBvbiBSb290IERl
dmljZS4KW0ZBSUxFRF0gRmFpbGVkIHRvIHN0YXJ0IHVkZXYgQ29sZHBsdWcgYWxsIERldmljZXMu
ClNlZSAnc3lzdGVtY3RsIHN0YXR1cyBzeXN0ZW1kLXVkZXYtdHJpZ2dlci5zZXJ2aWNlJyBmb3Ig
ZGV0YWlscy4KWyAgT0sgIF0gUmVhY2hlZCB0YXJnZXQgU3lzdGVtIFRpbWUgU3luY2hyb25pemVk
LgogICAgICAgICBTdGFydGluZyBSZW1vdW50IFJvb3QgYW5kIEtlcm5lbCBGaWxlIFN5c3RlbXMu
Li4KW0ZBSUxFRF0gRmFpbGVkIHRvIHN0YXJ0IFJlbW91bnQgUm9vdCBhbmQgS2VybmVsIEZpbGUg
U3lzdGVtcy4KU2VlICdzeXN0ZW1jdGwgc3RhdHVzIHN5c3RlbWQtcmVtb3VudC1mcy5zZXJ2aWNl
JyBmb3IgZGV0YWlscy4KICAgICAgICAgU3RhcnRpbmcgRmx1c2ggSm91cm5hbCB0byBQZXJzaXN0
ZW50IFN0b3JhZ2UuLi4KICAgICAgICAgU3RhcnRpbmcgQ3JlYXRlIFN0YXRpYyBEZXZpY2UgTm9k
ZXMgaW4gL2Rldi4uLgpbRkFJTEVEXSBGYWlsZWQgdG8gc3RhcnQgRmx1c2ggSm91cm5hbCB0byBQ
ZXJzaXN0ZW50IFN0b3JhZ2UuClNlZSAnc3lzdGVtY3RsIHN0YXR1cyBzeXN0ZW1kLWpvdXJuYWwt
Zmx1c2guc2VydmljZScgZm9yIGRldGFpbHMuCltGQUlMRURdIEZhaWxlZCB0byBzdGFydCBDcmVh
dGUgU3RhdGljIERldmljZSBOb2RlcyBpbiAvZGV2LgpTZWUgJ3N5c3RlbWN0bCBzdGF0dXMgc3lz
dGVtZC10bXBmaWxlcy1zZXR1cC1kZXYuc2VydmljZScgZm9yIGRldGFpbHMuCiAgICAgICAgIFN0
YXJ0aW5nIHVkZXYgS2VybmVsIERldmljZSBNYW5hZ2VyLi4uClsgIE9LICBdIFJlYWNoZWQgdGFy
Z2V0IExvY2FsIEZpbGUgU3lzdGVtcyAoUHJlKS4KICAgICAgICAgTW91bnRpbmcgL3Zhci92b2xh
dGlsZS4uLgpbICBPSyAgXSBSZWFjaGVkIHRhcmdldCBDb250YWluZXJzLgpbRkFJTEVEXSBGYWls
ZWQgdG8gbW91bnQgL3Zhci92b2xhdGlsZS4KU2VlICdzeXN0ZW1jdGwgc3RhdHVzIHZhci12b2xh
dGlsZS5tb3VudCcgZm9yIGRldGFpbHMuCltERVBFTkRdIERlcGVuZGVuY3kgZmFpbGVkIGZvciBC
aW5kIG1vdW50IHZvbGF0aWxlIC92YXIvY2FjaGUuCltERVBFTkRdIERlcGVuZGVuY3kgZmFpbGVk
IGZvciBCaW5kIG1vdW50IHZvbGF0aWxlIC9zcnYuCltERVBFTkRdIERlcGVuZGVuY3kgZmFpbGVk
IGZvciBCaW5kIG1vdW50IHZvbGF0aWxlIC92YXIvc3Bvb2wuCltERVBFTkRdIERlcGVuZGVuY3kg
ZmFpbGVkIGZvciBCaW5kIG1vdW50IHZvbGF0aWxlIC92YXIvbGliLgpbREVQRU5EXSBEZXBlbmRl
bmN5IGZhaWxlZCBmb3IgTG9jYWwgRmlsZSBTeXN0ZW1zLgpbICBPSyAgXSBSZWFjaGVkIHRhcmdl
dCBOZXR3b3JrLgpbICBPSyAgXSBSZWFjaGVkIHRhcmdldCBMb2dpbiBQcm9tcHRzLgpbICBPSyAg
XSBSZWFjaGVkIHRhcmdldCBUaW1lcnMuClsgIE9LICBdIFJlYWNoZWQgdGFyZ2V0IFNvY2tldHMu
ClsgIE9LICBdIFN0YXJ0ZWQgRW1lcmdlbmN5IFNoZWxsLgpbICBPSyAgXSBSZWFjaGVkIHRhcmdl
dCBFbWVyZ2VuY3kgTW9kZS4KICAgICAgICAgU3RhcnRpbmcgQ3JlYXRlIFZvbGF0aWxlIEZpbGVz
IGFuZCBEaXJlY3Rvcmllcy4uLgogICAgICAgICBTdGFydGluZyBMb2FkL1NhdmUgUmFuZG9tIFNl
ZWQuLi4KWyAgT0sgIF0gU3RhcnRlZCB1ZGV2IEtlcm5lbCBEZXZpY2UgTWFuYWdlci4KW0ZBSUxF
RF0gRmFpbGVkIHRvIHN0YXJ0IENyZWF0ZSBWb2xhdGlsZSBGaWxlcyBhbmQgRGlyZWN0b3JpZXMu
ClNlZSAnc3lzdGVtY3RsIHN0YXR1cyBzeXN0ZW1kLXRtcGZpbGVzLXNldHVwLnNlcnZpY2UnIGZv
ciBkZXRhaWxzLgpbICBPSyAgXSBTdGFydGVkIExvYWQvU2F2ZSBSYW5kb20gU2VlZC4KICAgICAg
ICAgU3RhcnRpbmcgVXBkYXRlIFVUTVAgYWJvdXQgU3lzdGVtIEJvb3QvU2h1dGRvd24uLi4KWyAg
T0sgIF0gU3RhcnRlZCBVcGRhdGUgVVRNUCBhYm91dCBTeXN0ZW0gQm9vdC9TaHV0ZG93bi4KICAg
ICAgICAgU3RhcnRpbmcgVXBkYXRlIFVUTVAgYWJvdXQgU3lzdGVtIFJ1bmxldmVsIENoYW5nZXMu
Li4KWyAgT0sgIF0gU3RhcnRlZCBVcGRhdGUgVVRNUCBhYm91dCBTeXN0ZW0gUnVubGV2ZWwgQ2hh
bmdlcy4KWW91IGFyZSBpbiBlbWVyZ2VuY3kgbW9kZS4gQWZ0ZXIgbG9nZ2luZyBpbiwgdHlwZSAi
am91cm5hbGN0bCAteGIiIHRvIHZpZXcKc3lzdGVtIGxvZ3MsICJzeXN0ZW1jdGwgcmVib290IiB0
byByZWJvb3QsICJzeXN0ZW1jdGwgZGVmYXVsdCIgb3IgImV4aXQiCnRvIGJvb3QgaW50byBkZWZh
dWx0IG1vZGUuClByZXNzIEVudGVyIGZvciBtYWludGVuYW5jZQoob3IgcHJlc3MgQ29udHJvbC1E
IHRvIGNvbnRpbnVlKToKClRoYW5rIHlvdS4KCktpbmQgcmVnYXJkcywKCi0gamgKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eCBNVEQg
ZGlzY3Vzc2lvbiBtYWlsaW5nIGxpc3QKaHR0cDovL2xpc3RzLmluZnJhZGVhZC5vcmcvbWFpbG1h
bi9saXN0aW5mby9saW51eC1tdGQvCg==
