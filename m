Return-Path: <linux-mtd-bounces+lists+linux-mtd=lfdr.de@lists.infradead.org>
X-Original-To: lists+linux-mtd@lfdr.de
Delivered-To: lists+linux-mtd@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id DE26F1CB5B2
	for <lists+linux-mtd@lfdr.de>; Fri,  8 May 2020 19:18:28 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:MIME-Version:Message-Id:Date:Subject:To
	:From:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
	Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:
	List-Owner; bh=VyrXUeum94N6J3Hkl5VkznHfEdWubtK40Q8+DpwloME=; b=Enz/NgI7Z7iP48
	SwWOw7bCrL043fNa8Gu+bykaf9wIbAjRlKfE1MOhcGeD0LlcoLpRNBlMKoRcNtoiCM2CgX1mDkYkH
	LOsxQIRGrEj4Zij5lICmB9FiiGFyErv34jmR++IitxDJj3szZv7tAam8KAD+OkBaxMB9Tn/mz46zB
	nVryGGIDAzGd47ZVMpxFTXF/gUcVTIEYLE7LTOTxHScnScuLPkpoqC3UyEPmv9I7lNKSv1wECPFJ/
	0Udd0cwtM0aMPYCvpKidGR5xzFNm/yVS+nLgHDmxHCIhp4v7Hy7rm79twe0wLSLA0V5DwDK7LV0GS
	k3XZSnmS672NS0O6EP4A==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jX6dk-0002yX-Fh; Fri, 08 May 2020 17:18:24 +0000
Received: from relay9-d.mail.gandi.net ([217.70.183.199])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jX6dX-0002yC-4f
 for linux-mtd@lists.infradead.org; Fri, 08 May 2020 17:18:13 +0000
X-Originating-IP: 91.224.148.103
Received: from localhost.localdomain (unknown [91.224.148.103])
 (Authenticated sender: miquel.raynal@bootlin.com)
 by relay9-d.mail.gandi.net (Postfix) with ESMTPSA id 02047FF805;
 Fri,  8 May 2020 17:18:06 +0000 (UTC)
From: Miquel Raynal <miquel.raynal@bootlin.com>
To: Richard Weinberger <richard@nod.at>, Vignesh Raghavendra <vigneshr@ti.com>,
 Tudor Ambarus <Tudor.Ambarus@microchip.com>,
 <linux-mtd@lists.infradead.org>
Subject: [PATCH] mtd: rawnand: gpmi: Use nand_extract_bits()
Date: Fri,  8 May 2020 19:18:05 +0200
Message-Id: <20200508171805.8627-1-miquel.raynal@bootlin.com>
X-Mailer: git-send-email 2.20.1
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200508_101811_457825_CBE9E04F 
X-CRM114-Status: GOOD (  18.19  )
X-Spam-Score: -0.7 (/)
X-Spam-Report: SpamAssassin version 3.4.4 on bombadil.infradead.org summary:
 Content analysis details:   (-0.7 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.7 RCVD_IN_DNSWL_LOW      RBL: Sender listed at https://www.dnswl.org/,
 low trust [217.70.183.199 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
X-BeenThere: linux-mtd@lists.infradead.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux MTD discussion mailing list <linux-mtd.lists.infradead.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/linux-mtd>,
 <mailto:linux-mtd-request@lists.infradead.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/linux-mtd/>
List-Post: <mailto:linux-mtd@lists.infradead.org>
List-Help: <mailto:linux-mtd-request@lists.infradead.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/linux-mtd>,
 <mailto:linux-mtd-request@lists.infradead.org?subject=subscribe>
Cc: Han Xu <han.xu@nxp.com>, Boris Brezillon <boris.brezillon@collabora.com>,
 Miquel Raynal <miquel.raynal@bootlin.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "linux-mtd" <linux-mtd-bounces@lists.infradead.org>
Errors-To: linux-mtd-bounces+lists+linux-mtd=lfdr.de@lists.infradead.org

RHJvcCB0aGUgdXNlIG9mIGdwbWlfY29weV9iaXRzKCkgaW4gZmF2b3Igb2YgdGhlIE5BTkQgaGVs
cGVyCm5hbmRfZXh0cmFjdF9iaXRzKCkuCgpTaWduZWQtb2ZmLWJ5OiBNaXF1ZWwgUmF5bmFsIDxt
aXF1ZWwucmF5bmFsQGJvb3RsaW4uY29tPgotLS0KCkhlbGxvLApUaGlzIHBhdGNoIGFwcGxpZXMg
b24gdG9wIG9mOgpodHRwczovL2xpc3RzLmluZnJhZGVhZC5vcmcvcGlwZXJtYWlsL2xpbnV4LW10
ZC8yMDIwLU1heS8wOTU4MzEuaHRtbApDaGVlcnMsCk1pcXXDqGwKCiBkcml2ZXJzL210ZC9uYW5k
L3Jhdy9ncG1pLW5hbmQvZ3BtaS1uYW5kLmMgfCAxNzQgKystLS0tLS0tLS0tLS0tLS0tLS0tCiAx
IGZpbGUgY2hhbmdlZCwgMTAgaW5zZXJ0aW9ucygrKSwgMTY0IGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2RyaXZlcnMvbXRkL25hbmQvcmF3L2dwbWktbmFuZC9ncG1pLW5hbmQuYyBiL2RyaXZl
cnMvbXRkL25hbmQvcmF3L2dwbWktbmFuZC9ncG1pLW5hbmQuYwppbmRleCBjYzRjYjE5MDk2OGUu
Ljk3YjQ2MGQ4ZDBjMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9tdGQvbmFuZC9yYXcvZ3BtaS1uYW5k
L2dwbWktbmFuZC5jCisrKyBiL2RyaXZlcnMvbXRkL25hbmQvcmF3L2dwbWktbmFuZC9ncG1pLW5h
bmQuYwpAQCAtODM0LDE1OCArODM0LDYgQEAgc3RhdGljIGJvb2wgcHJlcGFyZV9kYXRhX2RtYShz
dHJ1Y3QgZ3BtaV9uYW5kX2RhdGEgKnRoaXMsIGNvbnN0IHZvaWQgKmJ1ZiwKIAlyZXR1cm4gZmFs
c2U7CiB9CiAKLS8qKgotICogZ3BtaV9jb3B5X2JpdHMgLSBjb3B5IGJpdHMgZnJvbSBvbmUgbWVt
b3J5IHJlZ2lvbiB0byBhbm90aGVyCi0gKiBAZHN0OiBkZXN0aW5hdGlvbiBidWZmZXIKLSAqIEBk
c3RfYml0X29mZjogYml0IG9mZnNldCB3ZSdyZSBzdGFydGluZyB0byB3cml0ZSBhdAotICogQHNy
Yzogc291cmNlIGJ1ZmZlcgotICogQHNyY19iaXRfb2ZmOiBiaXQgb2Zmc2V0IHdlJ3JlIHN0YXJ0
aW5nIHRvIHJlYWQgZnJvbQotICogQG5iaXRzOiBudW1iZXIgb2YgYml0cyB0byBjb3B5Ci0gKgot
ICogVGhpcyBmdW5jdGlvbnMgY29waWVzIGJpdHMgZnJvbSBvbmUgbWVtb3J5IHJlZ2lvbiB0byBh
bm90aGVyLCBhbmQgaXMgdXNlZCBieQotICogdGhlIEdQTUkgZHJpdmVyIHRvIGNvcHkgRUNDIHNl
Y3Rpb25zIHdoaWNoIGFyZSBub3QgZ3VhcmFudGVlZCB0byBiZSBieXRlCi0gKiBhbGlnbmVkLgot
ICoKLSAqIHNyYyBhbmQgZHN0IHNob3VsZCBub3Qgb3ZlcmxhcC4KLSAqCi0gKi8KLXN0YXRpYyB2
b2lkIGdwbWlfY29weV9iaXRzKHU4ICpkc3QsIHNpemVfdCBkc3RfYml0X29mZiwgY29uc3QgdTgg
KnNyYywKLQkJCSAgIHNpemVfdCBzcmNfYml0X29mZiwgc2l6ZV90IG5iaXRzKQotewotCXNpemVf
dCBpOwotCXNpemVfdCBuYnl0ZXM7Ci0JdTMyIHNyY19idWZmZXIgPSAwOwotCXNpemVfdCBiaXRz
X2luX3NyY19idWZmZXIgPSAwOwotCi0JaWYgKCFuYml0cykKLQkJcmV0dXJuOwotCi0JLyoKLQkg
KiBNb3ZlIHNyYyBhbmQgZHN0IHBvaW50ZXJzIHRvIHRoZSBjbG9zZXN0IGJ5dGUgcG9pbnRlciBh
bmQgc3RvcmUgYml0Ci0JICogb2Zmc2V0cyB3aXRoaW4gYSBieXRlLgotCSAqLwotCXNyYyArPSBz
cmNfYml0X29mZiAvIDg7Ci0Jc3JjX2JpdF9vZmYgJT0gODsKLQotCWRzdCArPSBkc3RfYml0X29m
ZiAvIDg7Ci0JZHN0X2JpdF9vZmYgJT0gODsKLQotCS8qCi0JICogSW5pdGlhbGl6ZSB0aGUgc3Jj
X2J1ZmZlciB2YWx1ZSB3aXRoIGJpdHMgYXZhaWxhYmxlIGluIHRoZSBmaXJzdAotCSAqIGJ5dGUg
b2YgZGF0YSBzbyB0aGF0IHdlIGVuZCB1cCB3aXRoIGEgYnl0ZSBhbGlnbmVkIHNyYyBwb2ludGVy
LgotCSAqLwotCWlmIChzcmNfYml0X29mZikgewotCQlzcmNfYnVmZmVyID0gc3JjWzBdID4+IHNy
Y19iaXRfb2ZmOwotCQlpZiAobmJpdHMgPj0gKDggLSBzcmNfYml0X29mZikpIHsKLQkJCWJpdHNf
aW5fc3JjX2J1ZmZlciArPSA4IC0gc3JjX2JpdF9vZmY7Ci0JCX0gZWxzZSB7Ci0JCQlzcmNfYnVm
ZmVyICY9IEdFTk1BU0sobmJpdHMgLSAxLCAwKTsKLQkJCWJpdHNfaW5fc3JjX2J1ZmZlciArPSBu
Yml0czsKLQkJfQotCQluYml0cyAtPSBiaXRzX2luX3NyY19idWZmZXI7Ci0JCXNyYysrOwotCX0K
LQotCS8qIENhbGN1bGF0ZSB0aGUgbnVtYmVyIG9mIGJ5dGVzIHRoYXQgY2FuIGJlIGNvcGllZCBm
cm9tIHNyYyB0byBkc3QuICovCi0JbmJ5dGVzID0gbmJpdHMgLyA4OwotCi0JLyogVHJ5IHRvIGFs
aWduIGRzdCB0byBhIGJ5dGUgYm91bmRhcnkuICovCi0JaWYgKGRzdF9iaXRfb2ZmKSB7Ci0JCWlm
IChiaXRzX2luX3NyY19idWZmZXIgPCAoOCAtIGRzdF9iaXRfb2ZmKSAmJiBuYnl0ZXMpIHsKLQkJ
CXNyY19idWZmZXIgfD0gc3JjWzBdIDw8IGJpdHNfaW5fc3JjX2J1ZmZlcjsKLQkJCWJpdHNfaW5f
c3JjX2J1ZmZlciArPSA4OwotCQkJc3JjKys7Ci0JCQluYnl0ZXMtLTsKLQkJfQotCi0JCWlmIChi
aXRzX2luX3NyY19idWZmZXIgPj0gKDggLSBkc3RfYml0X29mZikpIHsKLQkJCWRzdFswXSAmPSBH
RU5NQVNLKGRzdF9iaXRfb2ZmIC0gMSwgMCk7Ci0JCQlkc3RbMF0gfD0gc3JjX2J1ZmZlciA8PCBk
c3RfYml0X29mZjsKLQkJCXNyY19idWZmZXIgPj49ICg4IC0gZHN0X2JpdF9vZmYpOwotCQkJYml0
c19pbl9zcmNfYnVmZmVyIC09ICg4IC0gZHN0X2JpdF9vZmYpOwotCQkJZHN0X2JpdF9vZmYgPSAw
OwotCQkJZHN0Kys7Ci0JCQlpZiAoYml0c19pbl9zcmNfYnVmZmVyID4gNykgewotCQkJCWJpdHNf
aW5fc3JjX2J1ZmZlciAtPSA4OwotCQkJCWRzdFswXSA9IHNyY19idWZmZXI7Ci0JCQkJZHN0Kys7
Ci0JCQkJc3JjX2J1ZmZlciA+Pj0gODsKLQkJCX0KLQkJfQotCX0KLQotCWlmICghYml0c19pbl9z
cmNfYnVmZmVyICYmICFkc3RfYml0X29mZikgewotCQkvKgotCQkgKiBCb3RoIHNyYyBhbmQgZHN0
IHBvaW50ZXJzIGFyZSBieXRlIGFsaWduZWQsIHRodXMgd2UgY2FuCi0JCSAqIGp1c3QgdXNlIHRo
ZSBvcHRpbWl6ZWQgbWVtY3B5IGZ1bmN0aW9uLgotCQkgKi8KLQkJaWYgKG5ieXRlcykKLQkJCW1l
bWNweShkc3QsIHNyYywgbmJ5dGVzKTsKLQl9IGVsc2UgewotCQkvKgotCQkgKiBzcmMgYnVmZmVy
IGlzIG5vdCBieXRlIGFsaWduZWQsIGhlbmNlIHdlIGhhdmUgdG8gY29weSBlYWNoCi0JCSAqIHNy
YyBieXRlIHRvIHRoZSBzcmNfYnVmZmVyIHZhcmlhYmxlIGJlZm9yZSBleHRyYWN0aW5nIGEgYnl0
ZQotCQkgKiB0byBzdG9yZSBpbiBkc3QuCi0JCSAqLwotCQlmb3IgKGkgPSAwOyBpIDwgbmJ5dGVz
OyBpKyspIHsKLQkJCXNyY19idWZmZXIgfD0gc3JjW2ldIDw8IGJpdHNfaW5fc3JjX2J1ZmZlcjsK
LQkJCWRzdFtpXSA9IHNyY19idWZmZXI7Ci0JCQlzcmNfYnVmZmVyID4+PSA4OwotCQl9Ci0JfQot
CS8qIFVwZGF0ZSBkc3QgYW5kIHNyYyBwb2ludGVycyAqLwotCWRzdCArPSBuYnl0ZXM7Ci0Jc3Jj
ICs9IG5ieXRlczsKLQotCS8qCi0JICogbmJpdHMgaXMgdGhlIG51bWJlciBvZiByZW1haW5pbmcg
Yml0cy4gSXQgc2hvdWxkIG5vdCBleGNlZWQgOCBhcwotCSAqIHdlJ3ZlIGFscmVhZHkgY29waWVk
IGFzIG11Y2ggYnl0ZXMgYXMgcG9zc2libGUuCi0JICovCi0JbmJpdHMgJT0gODsKLQotCS8qCi0J
ICogSWYgdGhlcmUncyBubyBtb3JlIGJpdHMgdG8gY29weSB0byB0aGUgZGVzdGluYXRpb24gYW5k
IHNyYyBidWZmZXIKLQkgKiB3YXMgYWxyZWFkeSBieXRlIGFsaWduZWQsIHRoZW4gd2UncmUgZG9u
ZS4KLQkgKi8KLQlpZiAoIW5iaXRzICYmICFiaXRzX2luX3NyY19idWZmZXIpCi0JCXJldHVybjsK
LQotCS8qIENvcHkgdGhlIHJlbWFpbmluZyBiaXRzIHRvIHNyY19idWZmZXIgKi8KLQlpZiAobmJp
dHMpCi0JCXNyY19idWZmZXIgfD0gKCpzcmMgJiBHRU5NQVNLKG5iaXRzIC0gMSwgMCkpIDw8Ci0J
CQkgICAgICBiaXRzX2luX3NyY19idWZmZXI7Ci0JYml0c19pbl9zcmNfYnVmZmVyICs9IG5iaXRz
OwotCi0JLyoKLQkgKiBJbiBjYXNlIHRoZXJlIHdlcmUgbm90IGVub3VnaCBiaXRzIHRvIGdldCBh
IGJ5dGUgYWxpZ25lZCBkc3QgYnVmZmVyCi0JICogcHJlcGFyZSB0aGUgc3JjX2J1ZmZlciB2YXJp
YWJsZSB0byBtYXRjaCB0aGUgZHN0IG9yZ2FuaXphdGlvbiAoc2hpZnQKLQkgKiBzcmNfYnVmZmVy
IGJ5IGRzdF9iaXRfb2ZmIGFuZCByZXRyaWV2ZSB0aGUgbGVhc3Qgc2lnbmlmaWNhbnQgYml0cwot
CSAqIGZyb20gZHN0KS4KLQkgKi8KLQlpZiAoZHN0X2JpdF9vZmYpCi0JCXNyY19idWZmZXIgPSAo
c3JjX2J1ZmZlciA8PCBkc3RfYml0X29mZikgfAotCQkJICAgICAoKmRzdCAmIEdFTk1BU0soZHN0
X2JpdF9vZmYgLSAxLCAwKSk7Ci0JYml0c19pbl9zcmNfYnVmZmVyICs9IGRzdF9iaXRfb2ZmOwot
Ci0JLyoKLQkgKiBLZWVwIG1vc3Qgc2lnbmlmaWNhbnQgYml0cyBmcm9tIGRzdCBpZiB3ZSBlbmQg
dXAgd2l0aCBhbiB1bmFsaWduZWQKLQkgKiBudW1iZXIgb2YgYml0cy4KLQkgKi8KLQluYnl0ZXMg
PSBiaXRzX2luX3NyY19idWZmZXIgLyA4OwotCWlmIChiaXRzX2luX3NyY19idWZmZXIgJSA4KSB7
Ci0JCXNyY19idWZmZXIgfD0gKGRzdFtuYnl0ZXNdICYKLQkJCSAgICAgICBHRU5NQVNLKDcsIGJp
dHNfaW5fc3JjX2J1ZmZlciAlIDgpKSA8PAotCQkJICAgICAgKG5ieXRlcyAqIDgpOwotCQluYnl0
ZXMrKzsKLQl9Ci0KLQkvKiBDb3B5IHRoZSByZW1haW5pbmcgYnl0ZXMgdG8gZHN0ICovCi0JZm9y
IChpID0gMDsgaSA8IG5ieXRlczsgaSsrKSB7Ci0JCWRzdFtpXSA9IHNyY19idWZmZXI7Ci0JCXNy
Y19idWZmZXIgPj49IDg7Ci0JfQotfQotCiAvKiBhZGQgb3VyIG93bmVyIGJidCBkZXNjcmlwdG9y
ICovCiBzdGF0aWMgdWludDhfdCBzY2FuX2ZmX3BhdHRlcm5bXSA9IHsgMHhmZiB9Owogc3RhdGlj
IHN0cnVjdCBuYW5kX2JidF9kZXNjciBncG1pX2JidF9kZXNjciA9IHsKQEAgLTE3MTMsNyArMTU2
MSw3IEBAIHN0YXRpYyBpbnQgZ3BtaV9lY2Nfd3JpdGVfb29iKHN0cnVjdCBuYW5kX2NoaXAgKmNo
aXAsIGludCBwYWdlKQogICogaW5saW5lIChpbnRlcmxlYXZlZCB3aXRoIHBheWxvYWQgREFUQSks
IGFuZCBkbyBub3QgYWxpZ24gZGF0YSBjaHVuayBvbgogICogYnl0ZSBib3VuZGFyaWVzLgogICog
V2UgdGh1cyBuZWVkIHRvIHRha2UgY2FyZSBtb3ZpbmcgdGhlIHBheWxvYWQgZGF0YSBhbmQgRUND
IGJpdHMgc3RvcmVkIGluIHRoZQotICogcGFnZSBpbnRvIHRoZSBwcm92aWRlZCBidWZmZXJzLCB3
aGljaCBpcyB3aHkgd2UncmUgdXNpbmcgZ3BtaV9jb3B5X2JpdHMuCisgKiBwYWdlIGludG8gdGhl
IHByb3ZpZGVkIGJ1ZmZlcnMsIHdoaWNoIGlzIHdoeSB3ZSdyZSB1c2luZyBuYW5kX2V4dHJhY3Rf
Yml0cygpLgogICoKICAqIFNlZSBzZXRfZ2VvbWV0cnlfYnlfZWNjX2luZm8gaW5saW5lIGNvbW1l
bnRzIHRvIGhhdmUgYSBmdWxsIGRlc2NyaXB0aW9uCiAgKiBvZiB0aGUgbGF5b3V0IHVzZWQgYnkg
dGhlIEdQTUkgY29udHJvbGxlci4KQEAgLTE3NjIsOSArMTYxMCw4IEBAIHN0YXRpYyBpbnQgZ3Bt
aV9lY2NfcmVhZF9wYWdlX3JhdyhzdHJ1Y3QgbmFuZF9jaGlwICpjaGlwLCB1aW50OF90ICpidWYs
CiAJLyogRXh0cmFjdCBpbnRlcmxlYXZlZCBwYXlsb2FkIGRhdGEgYW5kIEVDQyBiaXRzICovCiAJ
Zm9yIChzdGVwID0gMDsgc3RlcCA8IG5mY19nZW8tPmVjY19jaHVua19jb3VudDsgc3RlcCsrKSB7
CiAJCWlmIChidWYpCi0JCQlncG1pX2NvcHlfYml0cyhidWYsIHN0ZXAgKiBlY2NzaXplICogOCwK
LQkJCQkgICAgICAgdG1wX2J1Ziwgc3JjX2JpdF9vZmYsCi0JCQkJICAgICAgIGVjY3NpemUgKiA4
KTsKKwkJCW5hbmRfZXh0cmFjdF9iaXRzKGJ1Ziwgc3RlcCAqIGVjY3NpemUsIHRtcF9idWYsCisJ
CQkJCSAgc3JjX2JpdF9vZmYsIGVjY3NpemUgKiA4KTsKIAkJc3JjX2JpdF9vZmYgKz0gZWNjc2l6
ZSAqIDg7CiAKIAkJLyogQWxpZ24gbGFzdCBFQ0MgYmxvY2sgdG8gYWxpZ24gYSBieXRlIGJvdW5k
YXJ5ICovCkBAIC0xNzczLDkgKzE2MjAsOCBAQCBzdGF0aWMgaW50IGdwbWlfZWNjX3JlYWRfcGFn
ZV9yYXcoc3RydWN0IG5hbmRfY2hpcCAqY2hpcCwgdWludDhfdCAqYnVmLAogCQkJZWNjYml0cyAr
PSA4IC0gKChvb2JfYml0X29mZiArIGVjY2JpdHMpICUgOCk7CiAKIAkJaWYgKG9vYl9yZXF1aXJl
ZCkKLQkJCWdwbWlfY29weV9iaXRzKG9vYiwgb29iX2JpdF9vZmYsCi0JCQkJICAgICAgIHRtcF9i
dWYsIHNyY19iaXRfb2ZmLAotCQkJCSAgICAgICBlY2NiaXRzKTsKKwkJCW5hbmRfZXh0cmFjdF9i
aXRzKG9vYiwgb29iX2JpdF9vZmYsIHRtcF9idWYsCisJCQkJCSAgc3JjX2JpdF9vZmYsIGVjY2Jp
dHMpOwogCiAJCXNyY19iaXRfb2ZmICs9IGVjY2JpdHM7CiAJCW9vYl9iaXRfb2ZmICs9IGVjY2Jp
dHM7CkBAIC0xODAwLDcgKzE2NDYsNyBAQCBzdGF0aWMgaW50IGdwbWlfZWNjX3JlYWRfcGFnZV9y
YXcoc3RydWN0IG5hbmRfY2hpcCAqY2hpcCwgdWludDhfdCAqYnVmLAogICogaW5saW5lIChpbnRl
cmxlYXZlZCB3aXRoIHBheWxvYWQgREFUQSksIGFuZCBkbyBub3QgYWxpZ24gZGF0YSBjaHVuayBv
bgogICogYnl0ZSBib3VuZGFyaWVzLgogICogV2UgdGh1cyBuZWVkIHRvIHRha2UgY2FyZSBtb3Zp
bmcgdGhlIE9PQiBhcmVhIGF0IHRoZSByaWdodCBwbGFjZSBpbiB0aGUKLSAqIGZpbmFsIHBhZ2Us
IHdoaWNoIGlzIHdoeSB3ZSdyZSB1c2luZyBncG1pX2NvcHlfYml0cy4KKyAqIGZpbmFsIHBhZ2Us
IHdoaWNoIGlzIHdoeSB3ZSdyZSB1c2luZyBuYW5kX2V4dHJhY3RfYml0cygpLgogICoKICAqIFNl
ZSBzZXRfZ2VvbWV0cnlfYnlfZWNjX2luZm8gaW5saW5lIGNvbW1lbnRzIHRvIGhhdmUgYSBmdWxs
IGRlc2NyaXB0aW9uCiAgKiBvZiB0aGUgbGF5b3V0IHVzZWQgYnkgdGhlIEdQTUkgY29udHJvbGxl
ci4KQEAgLTE4MzksOCArMTY4NSw4IEBAIHN0YXRpYyBpbnQgZ3BtaV9lY2Nfd3JpdGVfcGFnZV9y
YXcoc3RydWN0IG5hbmRfY2hpcCAqY2hpcCwgY29uc3QgdWludDhfdCAqYnVmLAogCS8qIEludGVy
bGVhdmUgcGF5bG9hZCBkYXRhIGFuZCBFQ0MgYml0cyAqLwogCWZvciAoc3RlcCA9IDA7IHN0ZXAg
PCBuZmNfZ2VvLT5lY2NfY2h1bmtfY291bnQ7IHN0ZXArKykgewogCQlpZiAoYnVmKQotCQkJZ3Bt
aV9jb3B5X2JpdHModG1wX2J1ZiwgZHN0X2JpdF9vZmYsCi0JCQkJICAgICAgIGJ1Ziwgc3RlcCAq
IGVjY3NpemUgKiA4LCBlY2NzaXplICogOCk7CisJCQluYW5kX2V4dHJhY3RfYml0cyh0bXBfYnVm
LCBkc3RfYml0X29mZiwgYnVmLAorCQkJCQkgIHN0ZXAgKiBlY2NzaXplICogOCwgZWNjc2l6ZSAq
IDgpOwogCQlkc3RfYml0X29mZiArPSBlY2NzaXplICogODsKIAogCQkvKiBBbGlnbiBsYXN0IEVD
QyBibG9jayB0byBhbGlnbiBhIGJ5dGUgYm91bmRhcnkgKi8KQEAgLTE4NDksOCArMTY5NSw4IEBA
IHN0YXRpYyBpbnQgZ3BtaV9lY2Nfd3JpdGVfcGFnZV9yYXcoc3RydWN0IG5hbmRfY2hpcCAqY2hp
cCwgY29uc3QgdWludDhfdCAqYnVmLAogCQkJZWNjYml0cyArPSA4IC0gKChvb2JfYml0X29mZiAr
IGVjY2JpdHMpICUgOCk7CiAKIAkJaWYgKG9vYl9yZXF1aXJlZCkKLQkJCWdwbWlfY29weV9iaXRz
KHRtcF9idWYsIGRzdF9iaXRfb2ZmLAotCQkJCSAgICAgICBvb2IsIG9vYl9iaXRfb2ZmLCBlY2Ni
aXRzKTsKKwkJCW5hbmRfZXh0cmFjdF9iaXRzKHRtcF9idWYsIGRzdF9iaXRfb2ZmLCBvb2IsCisJ
CQkJCSAgb29iX2JpdF9vZmYsIGVjY2JpdHMpOwogCiAJCWRzdF9iaXRfb2ZmICs9IGVjY2JpdHM7
CiAJCW9vYl9iaXRfb2ZmICs9IGVjY2JpdHM7Ci0tIAoyLjIwLjEKCgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXggTVREIGRpc2N1c3Np
b24gbWFpbGluZyBsaXN0Cmh0dHA6Ly9saXN0cy5pbmZyYWRlYWQub3JnL21haWxtYW4vbGlzdGlu
Zm8vbGludXgtbXRkLwo=
